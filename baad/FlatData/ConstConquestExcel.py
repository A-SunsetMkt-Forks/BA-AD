# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConstConquestExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConstConquestExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConstConquestExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConstConquestExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConstConquestExcel
    def ManageUnitChange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstConquestExcel
    def AssistCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstConquestExcel
    def PlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstConquestExcel
    def AnimationUnitAmountMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstConquestExcel
    def AnimationUnitAmountMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstConquestExcel
    def AnimationUnitDelay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(6)
def ConstConquestExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddManageUnitChange(builder, ManageUnitChange): builder.PrependInt32Slot(0, ManageUnitChange, 0)
def ConstConquestExcelAddManageUnitChange(builder, ManageUnitChange):
    """This method is deprecated. Please switch to AddManageUnitChange."""
    return AddManageUnitChange(builder, ManageUnitChange)
def AddAssistCount(builder, AssistCount): builder.PrependInt32Slot(1, AssistCount, 0)
def ConstConquestExcelAddAssistCount(builder, AssistCount):
    """This method is deprecated. Please switch to AddAssistCount."""
    return AddAssistCount(builder, AssistCount)
def AddPlayTimeLimitInSeconds(builder, PlayTimeLimitInSeconds): builder.PrependInt32Slot(2, PlayTimeLimitInSeconds, 0)
def ConstConquestExcelAddPlayTimeLimitInSeconds(builder, PlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddPlayTimeLimitInSeconds."""
    return AddPlayTimeLimitInSeconds(builder, PlayTimeLimitInSeconds)
def AddAnimationUnitAmountMin(builder, AnimationUnitAmountMin): builder.PrependInt32Slot(3, AnimationUnitAmountMin, 0)
def ConstConquestExcelAddAnimationUnitAmountMin(builder, AnimationUnitAmountMin):
    """This method is deprecated. Please switch to AddAnimationUnitAmountMin."""
    return AddAnimationUnitAmountMin(builder, AnimationUnitAmountMin)
def AddAnimationUnitAmountMax(builder, AnimationUnitAmountMax): builder.PrependInt32Slot(4, AnimationUnitAmountMax, 0)
def ConstConquestExcelAddAnimationUnitAmountMax(builder, AnimationUnitAmountMax):
    """This method is deprecated. Please switch to AddAnimationUnitAmountMax."""
    return AddAnimationUnitAmountMax(builder, AnimationUnitAmountMax)
def AddAnimationUnitDelay(builder, AnimationUnitDelay): builder.PrependFloat32Slot(5, AnimationUnitDelay, 0.0)
def ConstConquestExcelAddAnimationUnitDelay(builder, AnimationUnitDelay):
    """This method is deprecated. Please switch to AddAnimationUnitDelay."""
    return AddAnimationUnitDelay(builder, AnimationUnitDelay)
def End(builder): return builder.EndObject()
def ConstConquestExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)