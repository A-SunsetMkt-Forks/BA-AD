# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentZoneExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentZoneExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentZoneExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentZoneExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentZoneExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def OriginalZoneId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def LocationId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def LocationRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def EventPointForLocationRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def StudentVisitProb(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # EventContentZoneExcel
    def StudentVisitProbAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # EventContentZoneExcel
    def StudentVisitProbLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EventContentZoneExcel
    def StudentVisitProbIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # EventContentZoneExcel
    def RewardGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentZoneExcel
    def Tags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # EventContentZoneExcel
    def TagsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # EventContentZoneExcel
    def TagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EventContentZoneExcel
    def TagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # EventContentZoneExcel
    def WhiteListTags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # EventContentZoneExcel
    def WhiteListTagsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # EventContentZoneExcel
    def WhiteListTagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EventContentZoneExcel
    def WhiteListTagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

def Start(builder): builder.StartObject(10)
def EventContentZoneExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def EventContentZoneExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddOriginalZoneId(builder, OriginalZoneId): builder.PrependInt64Slot(1, OriginalZoneId, 0)
def EventContentZoneExcelAddOriginalZoneId(builder, OriginalZoneId):
    """This method is deprecated. Please switch to AddOriginalZoneId."""
    return AddOriginalZoneId(builder, OriginalZoneId)
def AddLocationId(builder, LocationId): builder.PrependInt64Slot(2, LocationId, 0)
def EventContentZoneExcelAddLocationId(builder, LocationId):
    """This method is deprecated. Please switch to AddLocationId."""
    return AddLocationId(builder, LocationId)
def AddLocationRank(builder, LocationRank): builder.PrependInt64Slot(3, LocationRank, 0)
def EventContentZoneExcelAddLocationRank(builder, LocationRank):
    """This method is deprecated. Please switch to AddLocationRank."""
    return AddLocationRank(builder, LocationRank)
def AddEventPointForLocationRank(builder, EventPointForLocationRank): builder.PrependInt64Slot(4, EventPointForLocationRank, 0)
def EventContentZoneExcelAddEventPointForLocationRank(builder, EventPointForLocationRank):
    """This method is deprecated. Please switch to AddEventPointForLocationRank."""
    return AddEventPointForLocationRank(builder, EventPointForLocationRank)
def AddLocalizeEtcId(builder, LocalizeEtcId): builder.PrependUint32Slot(5, LocalizeEtcId, 0)
def EventContentZoneExcelAddLocalizeEtcId(builder, LocalizeEtcId):
    """This method is deprecated. Please switch to AddLocalizeEtcId."""
    return AddLocalizeEtcId(builder, LocalizeEtcId)
def AddStudentVisitProb(builder, StudentVisitProb): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(StudentVisitProb), 0)
def EventContentZoneExcelAddStudentVisitProb(builder, StudentVisitProb):
    """This method is deprecated. Please switch to AddStudentVisitProb."""
    return AddStudentVisitProb(builder, StudentVisitProb)
def StartStudentVisitProbVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def EventContentZoneExcelStartStudentVisitProbVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStudentVisitProbVector(builder, numElems)
def AddRewardGroupId(builder, RewardGroupId): builder.PrependInt64Slot(7, RewardGroupId, 0)
def EventContentZoneExcelAddRewardGroupId(builder, RewardGroupId):
    """This method is deprecated. Please switch to AddRewardGroupId."""
    return AddRewardGroupId(builder, RewardGroupId)
def AddTags(builder, Tags): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(Tags), 0)
def EventContentZoneExcelAddTags(builder, Tags):
    """This method is deprecated. Please switch to AddTags."""
    return AddTags(builder, Tags)
def StartTagsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def EventContentZoneExcelStartTagsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTagsVector(builder, numElems)
def AddWhiteListTags(builder, WhiteListTags): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(WhiteListTags), 0)
def EventContentZoneExcelAddWhiteListTags(builder, WhiteListTags):
    """This method is deprecated. Please switch to AddWhiteListTags."""
    return AddWhiteListTags(builder, WhiteListTags)
def StartWhiteListTagsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def EventContentZoneExcelStartWhiteListTagsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartWhiteListTagsVector(builder, numElems)
def End(builder): return builder.EndObject()
def EventContentZoneExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)