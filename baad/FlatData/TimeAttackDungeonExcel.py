# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TimeAttackDungeonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TimeAttackDungeonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTimeAttackDungeonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TimeAttackDungeonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TimeAttackDungeonExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # TimeAttackDungeonExcel
    def TimeAttackDungeonType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TimeAttackDungeonExcel
    def LocalizeEtcKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # TimeAttackDungeonExcel
    def IconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TimeAttackDungeonExcel
    def InformationGroupID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(5)
def TimeAttackDungeonExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def TimeAttackDungeonExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddTimeAttackDungeonType_(builder, TimeAttackDungeonType_): builder.PrependInt32Slot(1, TimeAttackDungeonType_, 0)
def TimeAttackDungeonExcelAddTimeAttackDungeonType_(builder, TimeAttackDungeonType_):
    """This method is deprecated. Please switch to AddTimeAttackDungeonType_."""
    return AddTimeAttackDungeonType_(builder, TimeAttackDungeonType_)
def AddLocalizeEtcKey(builder, LocalizeEtcKey): builder.PrependUint32Slot(2, LocalizeEtcKey, 0)
def TimeAttackDungeonExcelAddLocalizeEtcKey(builder, LocalizeEtcKey):
    """This method is deprecated. Please switch to AddLocalizeEtcKey."""
    return AddLocalizeEtcKey(builder, LocalizeEtcKey)
def AddIconPath(builder, IconPath): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(IconPath), 0)
def TimeAttackDungeonExcelAddIconPath(builder, IconPath):
    """This method is deprecated. Please switch to AddIconPath."""
    return AddIconPath(builder, IconPath)
def AddInformationGroupID(builder, InformationGroupID): builder.PrependInt64Slot(4, InformationGroupID, 0)
def TimeAttackDungeonExcelAddInformationGroupID(builder, InformationGroupID):
    """This method is deprecated. Please switch to AddInformationGroupID."""
    return AddInformationGroupID(builder, InformationGroupID)
def End(builder): return builder.EndObject()
def TimeAttackDungeonExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)