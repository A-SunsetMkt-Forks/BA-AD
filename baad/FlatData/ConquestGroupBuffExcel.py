# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConquestGroupBuffExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConquestGroupBuffExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConquestGroupBuffExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConquestGroupBuffExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConquestGroupBuffExcel
    def ConquestBuffId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestGroupBuffExcel
    def School_(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConquestGroupBuffExcel
    def School_AsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConquestGroupBuffExcel
    def School_Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestGroupBuffExcel
    def School_IsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # ConquestGroupBuffExcel
    def RecommandLocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ConquestGroupBuffExcel
    def SkillGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(4)
def ConquestGroupBuffExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddConquestBuffId(builder, ConquestBuffId): builder.PrependInt64Slot(0, ConquestBuffId, 0)
def ConquestGroupBuffExcelAddConquestBuffId(builder, ConquestBuffId):
    """This method is deprecated. Please switch to AddConquestBuffId."""
    return AddConquestBuffId(builder, ConquestBuffId)
def AddSchool_(builder, School_): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(School_), 0)
def ConquestGroupBuffExcelAddSchool_(builder, School_):
    """This method is deprecated. Please switch to AddSchool_."""
    return AddSchool_(builder, School_)
def StartSchool_Vector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConquestGroupBuffExcelStartSchool_Vector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartSchool_Vector(builder, numElems)
def AddRecommandLocalizeEtcId(builder, RecommandLocalizeEtcId): builder.PrependUint32Slot(2, RecommandLocalizeEtcId, 0)
def ConquestGroupBuffExcelAddRecommandLocalizeEtcId(builder, RecommandLocalizeEtcId):
    """This method is deprecated. Please switch to AddRecommandLocalizeEtcId."""
    return AddRecommandLocalizeEtcId(builder, RecommandLocalizeEtcId)
def AddSkillGroupId(builder, SkillGroupId): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(SkillGroupId), 0)
def ConquestGroupBuffExcelAddSkillGroupId(builder, SkillGroupId):
    """This method is deprecated. Please switch to AddSkillGroupId."""
    return AddSkillGroupId(builder, SkillGroupId)
def End(builder): return builder.EndObject()
def ConquestGroupBuffExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)