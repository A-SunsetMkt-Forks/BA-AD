# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentDiceRaceProbExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentDiceRaceProbExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentDiceRaceProbExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentDiceRaceProbExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentDiceRaceProbExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentDiceRaceProbExcel
    def EventContentDiceRaceResultType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentDiceRaceProbExcel
    def CostItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentDiceRaceProbExcel
    def CostItemAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentDiceRaceProbExcel
    def DiceResult(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentDiceRaceProbExcel
    def Prob(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(6)
def EventContentDiceRaceProbExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddEventContentId(builder, EventContentId): builder.PrependInt64Slot(0, EventContentId, 0)
def EventContentDiceRaceProbExcelAddEventContentId(builder, EventContentId):
    """This method is deprecated. Please switch to AddEventContentId."""
    return AddEventContentId(builder, EventContentId)
def AddEventContentDiceRaceResultType_(builder, EventContentDiceRaceResultType_): builder.PrependInt32Slot(1, EventContentDiceRaceResultType_, 0)
def EventContentDiceRaceProbExcelAddEventContentDiceRaceResultType_(builder, EventContentDiceRaceResultType_):
    """This method is deprecated. Please switch to AddEventContentDiceRaceResultType_."""
    return AddEventContentDiceRaceResultType_(builder, EventContentDiceRaceResultType_)
def AddCostItemId(builder, CostItemId): builder.PrependInt64Slot(2, CostItemId, 0)
def EventContentDiceRaceProbExcelAddCostItemId(builder, CostItemId):
    """This method is deprecated. Please switch to AddCostItemId."""
    return AddCostItemId(builder, CostItemId)
def AddCostItemAmount(builder, CostItemAmount): builder.PrependInt32Slot(3, CostItemAmount, 0)
def EventContentDiceRaceProbExcelAddCostItemAmount(builder, CostItemAmount):
    """This method is deprecated. Please switch to AddCostItemAmount."""
    return AddCostItemAmount(builder, CostItemAmount)
def AddDiceResult(builder, DiceResult): builder.PrependInt32Slot(4, DiceResult, 0)
def EventContentDiceRaceProbExcelAddDiceResult(builder, DiceResult):
    """This method is deprecated. Please switch to AddDiceResult."""
    return AddDiceResult(builder, DiceResult)
def AddProb(builder, Prob): builder.PrependInt32Slot(5, Prob, 0)
def EventContentDiceRaceProbExcelAddProb(builder, Prob):
    """This method is deprecated. Please switch to AddProb."""
    return AddProb(builder, Prob)
def End(builder): return builder.EndObject()
def EventContentDiceRaceProbExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)