# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FurnitureExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FurnitureExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFurnitureExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # FurnitureExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FurnitureExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def ProductionStep_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def Rarity_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def SubCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def StarGradeInit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def Tier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def Icon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FurnitureExcel
    def SizeWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def SizeHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def OtherSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def ExpandWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def Enable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # FurnitureExcel
    def ReverseRotation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # FurnitureExcel
    def Prefab(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FurnitureExcel
    def PrefabExpand(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FurnitureExcel
    def SubPrefab(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FurnitureExcel
    def SubExpandPrefab(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FurnitureExcel
    def CornerPrefab(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FurnitureExcel
    def StackableMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def RecipeCraftId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def SetGroudpId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def ComfortBonus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def VisitOperationType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def VisitBonusOperationType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def Tags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FurnitureExcel
    def TagsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # FurnitureExcel
    def TagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FurnitureExcel
    def TagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        return o == 0

    # FurnitureExcel
    def CraftQualityTier0(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def CraftQualityTier1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def CraftQualityTier2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def ShiftingCraftQuality(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def FurnitureFunctionType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def FurnitureFunctionParameter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def VideoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def EventCollectionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def FurnitureBubbleOffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def FurnitureBubbleOffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FurnitureExcel
    def CafeCharacterStateReq(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # FurnitureExcel
    def CafeCharacterStateReqLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FurnitureExcel
    def CafeCharacterStateReqIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        return o == 0

    # FurnitureExcel
    def CafeCharacterStateAdd(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # FurnitureExcel
    def CafeCharacterStateAddLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FurnitureExcel
    def CafeCharacterStateAddIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        return o == 0

    # FurnitureExcel
    def CafeCharacterStateMake(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # FurnitureExcel
    def CafeCharacterStateMakeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FurnitureExcel
    def CafeCharacterStateMakeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        return o == 0

    # FurnitureExcel
    def CafeCharacterStateOnly(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # FurnitureExcel
    def CafeCharacterStateOnlyLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FurnitureExcel
    def CafeCharacterStateOnlyIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        return o == 0

def Start(builder): builder.StartObject(41)
def FurnitureExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def FurnitureExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddProductionStep_(builder, ProductionStep_): builder.PrependInt32Slot(1, ProductionStep_, 0)
def FurnitureExcelAddProductionStep_(builder, ProductionStep_):
    """This method is deprecated. Please switch to AddProductionStep_."""
    return AddProductionStep_(builder, ProductionStep_)
def AddRarity_(builder, Rarity_): builder.PrependInt32Slot(2, Rarity_, 0)
def FurnitureExcelAddRarity_(builder, Rarity_):
    """This method is deprecated. Please switch to AddRarity_."""
    return AddRarity_(builder, Rarity_)
def AddCategory(builder, Category): builder.PrependInt32Slot(3, Category, 0)
def FurnitureExcelAddCategory(builder, Category):
    """This method is deprecated. Please switch to AddCategory."""
    return AddCategory(builder, Category)
def AddSubCategory(builder, SubCategory): builder.PrependInt32Slot(4, SubCategory, 0)
def FurnitureExcelAddSubCategory(builder, SubCategory):
    """This method is deprecated. Please switch to AddSubCategory."""
    return AddSubCategory(builder, SubCategory)
def AddLocalizeEtcId(builder, LocalizeEtcId): builder.PrependUint32Slot(5, LocalizeEtcId, 0)
def FurnitureExcelAddLocalizeEtcId(builder, LocalizeEtcId):
    """This method is deprecated. Please switch to AddLocalizeEtcId."""
    return AddLocalizeEtcId(builder, LocalizeEtcId)
def AddStarGradeInit(builder, StarGradeInit): builder.PrependInt32Slot(6, StarGradeInit, 0)
def FurnitureExcelAddStarGradeInit(builder, StarGradeInit):
    """This method is deprecated. Please switch to AddStarGradeInit."""
    return AddStarGradeInit(builder, StarGradeInit)
def AddTier(builder, Tier): builder.PrependInt64Slot(7, Tier, 0)
def FurnitureExcelAddTier(builder, Tier):
    """This method is deprecated. Please switch to AddTier."""
    return AddTier(builder, Tier)
def AddIcon(builder, Icon): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(Icon), 0)
def FurnitureExcelAddIcon(builder, Icon):
    """This method is deprecated. Please switch to AddIcon."""
    return AddIcon(builder, Icon)
def AddSizeWidth(builder, SizeWidth): builder.PrependInt32Slot(9, SizeWidth, 0)
def FurnitureExcelAddSizeWidth(builder, SizeWidth):
    """This method is deprecated. Please switch to AddSizeWidth."""
    return AddSizeWidth(builder, SizeWidth)
def AddSizeHeight(builder, SizeHeight): builder.PrependInt32Slot(10, SizeHeight, 0)
def FurnitureExcelAddSizeHeight(builder, SizeHeight):
    """This method is deprecated. Please switch to AddSizeHeight."""
    return AddSizeHeight(builder, SizeHeight)
def AddOtherSize(builder, OtherSize): builder.PrependInt32Slot(11, OtherSize, 0)
def FurnitureExcelAddOtherSize(builder, OtherSize):
    """This method is deprecated. Please switch to AddOtherSize."""
    return AddOtherSize(builder, OtherSize)
def AddExpandWidth(builder, ExpandWidth): builder.PrependInt32Slot(12, ExpandWidth, 0)
def FurnitureExcelAddExpandWidth(builder, ExpandWidth):
    """This method is deprecated. Please switch to AddExpandWidth."""
    return AddExpandWidth(builder, ExpandWidth)
def AddEnable(builder, Enable): builder.PrependBoolSlot(13, Enable, 0)
def FurnitureExcelAddEnable(builder, Enable):
    """This method is deprecated. Please switch to AddEnable."""
    return AddEnable(builder, Enable)
def AddReverseRotation(builder, ReverseRotation): builder.PrependBoolSlot(14, ReverseRotation, 0)
def FurnitureExcelAddReverseRotation(builder, ReverseRotation):
    """This method is deprecated. Please switch to AddReverseRotation."""
    return AddReverseRotation(builder, ReverseRotation)
def AddPrefab(builder, Prefab): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(Prefab), 0)
def FurnitureExcelAddPrefab(builder, Prefab):
    """This method is deprecated. Please switch to AddPrefab."""
    return AddPrefab(builder, Prefab)
def AddPrefabExpand(builder, PrefabExpand): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(PrefabExpand), 0)
def FurnitureExcelAddPrefabExpand(builder, PrefabExpand):
    """This method is deprecated. Please switch to AddPrefabExpand."""
    return AddPrefabExpand(builder, PrefabExpand)
def AddSubPrefab(builder, SubPrefab): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(SubPrefab), 0)
def FurnitureExcelAddSubPrefab(builder, SubPrefab):
    """This method is deprecated. Please switch to AddSubPrefab."""
    return AddSubPrefab(builder, SubPrefab)
def AddSubExpandPrefab(builder, SubExpandPrefab): builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(SubExpandPrefab), 0)
def FurnitureExcelAddSubExpandPrefab(builder, SubExpandPrefab):
    """This method is deprecated. Please switch to AddSubExpandPrefab."""
    return AddSubExpandPrefab(builder, SubExpandPrefab)
def AddCornerPrefab(builder, CornerPrefab): builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(CornerPrefab), 0)
def FurnitureExcelAddCornerPrefab(builder, CornerPrefab):
    """This method is deprecated. Please switch to AddCornerPrefab."""
    return AddCornerPrefab(builder, CornerPrefab)
def AddStackableMax(builder, StackableMax): builder.PrependInt64Slot(20, StackableMax, 0)
def FurnitureExcelAddStackableMax(builder, StackableMax):
    """This method is deprecated. Please switch to AddStackableMax."""
    return AddStackableMax(builder, StackableMax)
def AddRecipeCraftId(builder, RecipeCraftId): builder.PrependInt64Slot(21, RecipeCraftId, 0)
def FurnitureExcelAddRecipeCraftId(builder, RecipeCraftId):
    """This method is deprecated. Please switch to AddRecipeCraftId."""
    return AddRecipeCraftId(builder, RecipeCraftId)
def AddSetGroudpId(builder, SetGroudpId): builder.PrependInt64Slot(22, SetGroudpId, 0)
def FurnitureExcelAddSetGroudpId(builder, SetGroudpId):
    """This method is deprecated. Please switch to AddSetGroudpId."""
    return AddSetGroudpId(builder, SetGroudpId)
def AddComfortBonus(builder, ComfortBonus): builder.PrependInt64Slot(23, ComfortBonus, 0)
def FurnitureExcelAddComfortBonus(builder, ComfortBonus):
    """This method is deprecated. Please switch to AddComfortBonus."""
    return AddComfortBonus(builder, ComfortBonus)
def AddVisitOperationType(builder, VisitOperationType): builder.PrependInt64Slot(24, VisitOperationType, 0)
def FurnitureExcelAddVisitOperationType(builder, VisitOperationType):
    """This method is deprecated. Please switch to AddVisitOperationType."""
    return AddVisitOperationType(builder, VisitOperationType)
def AddVisitBonusOperationType(builder, VisitBonusOperationType): builder.PrependInt64Slot(25, VisitBonusOperationType, 0)
def FurnitureExcelAddVisitBonusOperationType(builder, VisitBonusOperationType):
    """This method is deprecated. Please switch to AddVisitBonusOperationType."""
    return AddVisitBonusOperationType(builder, VisitBonusOperationType)
def AddTags(builder, Tags): builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(Tags), 0)
def FurnitureExcelAddTags(builder, Tags):
    """This method is deprecated. Please switch to AddTags."""
    return AddTags(builder, Tags)
def StartTagsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FurnitureExcelStartTagsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTagsVector(builder, numElems)
def AddCraftQualityTier0(builder, CraftQualityTier0): builder.PrependInt64Slot(27, CraftQualityTier0, 0)
def FurnitureExcelAddCraftQualityTier0(builder, CraftQualityTier0):
    """This method is deprecated. Please switch to AddCraftQualityTier0."""
    return AddCraftQualityTier0(builder, CraftQualityTier0)
def AddCraftQualityTier1(builder, CraftQualityTier1): builder.PrependInt64Slot(28, CraftQualityTier1, 0)
def FurnitureExcelAddCraftQualityTier1(builder, CraftQualityTier1):
    """This method is deprecated. Please switch to AddCraftQualityTier1."""
    return AddCraftQualityTier1(builder, CraftQualityTier1)
def AddCraftQualityTier2(builder, CraftQualityTier2): builder.PrependInt64Slot(29, CraftQualityTier2, 0)
def FurnitureExcelAddCraftQualityTier2(builder, CraftQualityTier2):
    """This method is deprecated. Please switch to AddCraftQualityTier2."""
    return AddCraftQualityTier2(builder, CraftQualityTier2)
def AddShiftingCraftQuality(builder, ShiftingCraftQuality): builder.PrependInt64Slot(30, ShiftingCraftQuality, 0)
def FurnitureExcelAddShiftingCraftQuality(builder, ShiftingCraftQuality):
    """This method is deprecated. Please switch to AddShiftingCraftQuality."""
    return AddShiftingCraftQuality(builder, ShiftingCraftQuality)
def AddFurnitureFunctionType_(builder, FurnitureFunctionType_): builder.PrependInt32Slot(31, FurnitureFunctionType_, 0)
def FurnitureExcelAddFurnitureFunctionType_(builder, FurnitureFunctionType_):
    """This method is deprecated. Please switch to AddFurnitureFunctionType_."""
    return AddFurnitureFunctionType_(builder, FurnitureFunctionType_)
def AddFurnitureFunctionParameter(builder, FurnitureFunctionParameter): builder.PrependInt64Slot(32, FurnitureFunctionParameter, 0)
def FurnitureExcelAddFurnitureFunctionParameter(builder, FurnitureFunctionParameter):
    """This method is deprecated. Please switch to AddFurnitureFunctionParameter."""
    return AddFurnitureFunctionParameter(builder, FurnitureFunctionParameter)
def AddVideoId(builder, VideoId): builder.PrependInt64Slot(33, VideoId, 0)
def FurnitureExcelAddVideoId(builder, VideoId):
    """This method is deprecated. Please switch to AddVideoId."""
    return AddVideoId(builder, VideoId)
def AddEventCollectionId(builder, EventCollectionId): builder.PrependInt64Slot(34, EventCollectionId, 0)
def FurnitureExcelAddEventCollectionId(builder, EventCollectionId):
    """This method is deprecated. Please switch to AddEventCollectionId."""
    return AddEventCollectionId(builder, EventCollectionId)
def AddFurnitureBubbleOffsetX(builder, FurnitureBubbleOffsetX): builder.PrependInt64Slot(35, FurnitureBubbleOffsetX, 0)
def FurnitureExcelAddFurnitureBubbleOffsetX(builder, FurnitureBubbleOffsetX):
    """This method is deprecated. Please switch to AddFurnitureBubbleOffsetX."""
    return AddFurnitureBubbleOffsetX(builder, FurnitureBubbleOffsetX)
def AddFurnitureBubbleOffsetY(builder, FurnitureBubbleOffsetY): builder.PrependInt64Slot(36, FurnitureBubbleOffsetY, 0)
def FurnitureExcelAddFurnitureBubbleOffsetY(builder, FurnitureBubbleOffsetY):
    """This method is deprecated. Please switch to AddFurnitureBubbleOffsetY."""
    return AddFurnitureBubbleOffsetY(builder, FurnitureBubbleOffsetY)
def AddCafeCharacterStateReq(builder, CafeCharacterStateReq): builder.PrependUOffsetTRelativeSlot(37, flatbuffers.number_types.UOffsetTFlags.py_type(CafeCharacterStateReq), 0)
def FurnitureExcelAddCafeCharacterStateReq(builder, CafeCharacterStateReq):
    """This method is deprecated. Please switch to AddCafeCharacterStateReq."""
    return AddCafeCharacterStateReq(builder, CafeCharacterStateReq)
def StartCafeCharacterStateReqVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FurnitureExcelStartCafeCharacterStateReqVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCafeCharacterStateReqVector(builder, numElems)
def AddCafeCharacterStateAdd(builder, CafeCharacterStateAdd): builder.PrependUOffsetTRelativeSlot(38, flatbuffers.number_types.UOffsetTFlags.py_type(CafeCharacterStateAdd), 0)
def FurnitureExcelAddCafeCharacterStateAdd(builder, CafeCharacterStateAdd):
    """This method is deprecated. Please switch to AddCafeCharacterStateAdd."""
    return AddCafeCharacterStateAdd(builder, CafeCharacterStateAdd)
def StartCafeCharacterStateAddVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FurnitureExcelStartCafeCharacterStateAddVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCafeCharacterStateAddVector(builder, numElems)
def AddCafeCharacterStateMake(builder, CafeCharacterStateMake): builder.PrependUOffsetTRelativeSlot(39, flatbuffers.number_types.UOffsetTFlags.py_type(CafeCharacterStateMake), 0)
def FurnitureExcelAddCafeCharacterStateMake(builder, CafeCharacterStateMake):
    """This method is deprecated. Please switch to AddCafeCharacterStateMake."""
    return AddCafeCharacterStateMake(builder, CafeCharacterStateMake)
def StartCafeCharacterStateMakeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FurnitureExcelStartCafeCharacterStateMakeVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCafeCharacterStateMakeVector(builder, numElems)
def AddCafeCharacterStateOnly(builder, CafeCharacterStateOnly): builder.PrependUOffsetTRelativeSlot(40, flatbuffers.number_types.UOffsetTFlags.py_type(CafeCharacterStateOnly), 0)
def FurnitureExcelAddCafeCharacterStateOnly(builder, CafeCharacterStateOnly):
    """This method is deprecated. Please switch to AddCafeCharacterStateOnly."""
    return AddCafeCharacterStateOnly(builder, CafeCharacterStateOnly)
def StartCafeCharacterStateOnlyVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FurnitureExcelStartCafeCharacterStateOnlyVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCafeCharacterStateOnlyVector(builder, numElems)
def End(builder): return builder.EndObject()
def FurnitureExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)