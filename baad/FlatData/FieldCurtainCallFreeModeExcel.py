# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FieldCurtainCallFreeModeExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FieldCurtainCallFreeModeExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFieldCurtainCallFreeModeExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # FieldCurtainCallFreeModeExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FieldCurtainCallFreeModeExcel
    def UniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldCurtainCallFreeModeExcel
    def OpenDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldCurtainCallFreeModeExcel
    def SetFieldDateID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldCurtainCallFreeModeExcel
    def SetFieldQuestOpenDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(4)
def FieldCurtainCallFreeModeExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddUniqueId(builder, UniqueId): builder.PrependInt64Slot(0, UniqueId, 0)
def FieldCurtainCallFreeModeExcelAddUniqueId(builder, UniqueId):
    """This method is deprecated. Please switch to AddUniqueId."""
    return AddUniqueId(builder, UniqueId)
def AddOpenDate(builder, OpenDate): builder.PrependInt64Slot(1, OpenDate, 0)
def FieldCurtainCallFreeModeExcelAddOpenDate(builder, OpenDate):
    """This method is deprecated. Please switch to AddOpenDate."""
    return AddOpenDate(builder, OpenDate)
def AddSetFieldDateID(builder, SetFieldDateID): builder.PrependInt64Slot(2, SetFieldDateID, 0)
def FieldCurtainCallFreeModeExcelAddSetFieldDateID(builder, SetFieldDateID):
    """This method is deprecated. Please switch to AddSetFieldDateID."""
    return AddSetFieldDateID(builder, SetFieldDateID)
def AddSetFieldQuestOpenDate(builder, SetFieldQuestOpenDate): builder.PrependInt64Slot(3, SetFieldQuestOpenDate, 0)
def FieldCurtainCallFreeModeExcelAddSetFieldQuestOpenDate(builder, SetFieldQuestOpenDate):
    """This method is deprecated. Please switch to AddSetFieldQuestOpenDate."""
    return AddSetFieldQuestOpenDate(builder, SetFieldQuestOpenDate)
def End(builder): return builder.EndObject()
def FieldCurtainCallFreeModeExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)