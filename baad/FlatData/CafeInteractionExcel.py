# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CafeInteractionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CafeInteractionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCafeInteractionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CafeInteractionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CafeInteractionExcel
    def CharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def IgnoreIfUnobtained(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CafeInteractionExcel
    def IgnoreIfUnobtainedStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CafeInteractionExcel
    def IgnoreIfUnobtainedEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CafeInteractionExcel
    def BubbleType_(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # CafeInteractionExcel
    def BubbleType_AsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # CafeInteractionExcel
    def BubbleType_Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CafeInteractionExcel
    def BubbleType_IsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # CafeInteractionExcel
    def BubbleDuration(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CafeInteractionExcel
    def BubbleDurationAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CafeInteractionExcel
    def BubbleDurationLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CafeInteractionExcel
    def BubbleDurationIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # CafeInteractionExcel
    def FavorEmoticonRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def FavorEmoticonRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def FavorEmoticonRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def CafeCharacterState(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # CafeInteractionExcel
    def CafeCharacterStateLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CafeInteractionExcel
    def CafeCharacterStateIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

def Start(builder): builder.StartObject(10)
def CafeInteractionExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCharacterId(builder, CharacterId): builder.PrependInt64Slot(0, CharacterId, 0)
def CafeInteractionExcelAddCharacterId(builder, CharacterId):
    """This method is deprecated. Please switch to AddCharacterId."""
    return AddCharacterId(builder, CharacterId)
def AddIgnoreIfUnobtained(builder, IgnoreIfUnobtained): builder.PrependBoolSlot(1, IgnoreIfUnobtained, 0)
def CafeInteractionExcelAddIgnoreIfUnobtained(builder, IgnoreIfUnobtained):
    """This method is deprecated. Please switch to AddIgnoreIfUnobtained."""
    return AddIgnoreIfUnobtained(builder, IgnoreIfUnobtained)
def AddIgnoreIfUnobtainedStartDate(builder, IgnoreIfUnobtainedStartDate): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(IgnoreIfUnobtainedStartDate), 0)
def CafeInteractionExcelAddIgnoreIfUnobtainedStartDate(builder, IgnoreIfUnobtainedStartDate):
    """This method is deprecated. Please switch to AddIgnoreIfUnobtainedStartDate."""
    return AddIgnoreIfUnobtainedStartDate(builder, IgnoreIfUnobtainedStartDate)
def AddIgnoreIfUnobtainedEndDate(builder, IgnoreIfUnobtainedEndDate): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(IgnoreIfUnobtainedEndDate), 0)
def CafeInteractionExcelAddIgnoreIfUnobtainedEndDate(builder, IgnoreIfUnobtainedEndDate):
    """This method is deprecated. Please switch to AddIgnoreIfUnobtainedEndDate."""
    return AddIgnoreIfUnobtainedEndDate(builder, IgnoreIfUnobtainedEndDate)
def AddBubbleType_(builder, BubbleType_): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(BubbleType_), 0)
def CafeInteractionExcelAddBubbleType_(builder, BubbleType_):
    """This method is deprecated. Please switch to AddBubbleType_."""
    return AddBubbleType_(builder, BubbleType_)
def StartBubbleType_Vector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CafeInteractionExcelStartBubbleType_Vector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartBubbleType_Vector(builder, numElems)
def AddBubbleDuration(builder, BubbleDuration): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(BubbleDuration), 0)
def CafeInteractionExcelAddBubbleDuration(builder, BubbleDuration):
    """This method is deprecated. Please switch to AddBubbleDuration."""
    return AddBubbleDuration(builder, BubbleDuration)
def StartBubbleDurationVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CafeInteractionExcelStartBubbleDurationVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartBubbleDurationVector(builder, numElems)
def AddFavorEmoticonRewardParcelType(builder, FavorEmoticonRewardParcelType): builder.PrependInt32Slot(6, FavorEmoticonRewardParcelType, 0)
def CafeInteractionExcelAddFavorEmoticonRewardParcelType(builder, FavorEmoticonRewardParcelType):
    """This method is deprecated. Please switch to AddFavorEmoticonRewardParcelType."""
    return AddFavorEmoticonRewardParcelType(builder, FavorEmoticonRewardParcelType)
def AddFavorEmoticonRewardId(builder, FavorEmoticonRewardId): builder.PrependInt64Slot(7, FavorEmoticonRewardId, 0)
def CafeInteractionExcelAddFavorEmoticonRewardId(builder, FavorEmoticonRewardId):
    """This method is deprecated. Please switch to AddFavorEmoticonRewardId."""
    return AddFavorEmoticonRewardId(builder, FavorEmoticonRewardId)
def AddFavorEmoticonRewardAmount(builder, FavorEmoticonRewardAmount): builder.PrependInt64Slot(8, FavorEmoticonRewardAmount, 0)
def CafeInteractionExcelAddFavorEmoticonRewardAmount(builder, FavorEmoticonRewardAmount):
    """This method is deprecated. Please switch to AddFavorEmoticonRewardAmount."""
    return AddFavorEmoticonRewardAmount(builder, FavorEmoticonRewardAmount)
def AddCafeCharacterState(builder, CafeCharacterState): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(CafeCharacterState), 0)
def CafeInteractionExcelAddCafeCharacterState(builder, CafeCharacterState):
    """This method is deprecated. Please switch to AddCafeCharacterState."""
    return AddCafeCharacterState(builder, CafeCharacterState)
def StartCafeCharacterStateVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CafeInteractionExcelStartCafeCharacterStateVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCafeCharacterStateVector(builder, numElems)
def End(builder): return builder.EndObject()
def CafeInteractionExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)