# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConquestMapExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConquestMapExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConquestMapExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConquestMapExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConquestMapExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestMapExcel
    def DevName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestMapExcel
    def MapDifficulty(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestMapExcel
    def StepIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestMapExcel
    def ConquestMap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestMapExcel
    def StepEnterScenarioGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestMapExcel
    def StepOpenConditionType(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConquestMapExcel
    def StepOpenConditionTypeAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConquestMapExcel
    def StepOpenConditionTypeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestMapExcel
    def StepOpenConditionTypeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # ConquestMapExcel
    def StepOpenConditionParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # ConquestMapExcel
    def StepOpenConditionParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestMapExcel
    def StepOpenConditionParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # ConquestMapExcel
    def MapGoalLocalize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestMapExcel
    def StepGoalLocalize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestMapExcel
    def StepNameLocalize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestMapExcel
    def ConquestMapBG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestMapExcel
    def CameraSettingId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(13)
def ConquestMapExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddEventContentId(builder, EventContentId): builder.PrependInt64Slot(0, EventContentId, 0)
def ConquestMapExcelAddEventContentId(builder, EventContentId):
    """This method is deprecated. Please switch to AddEventContentId."""
    return AddEventContentId(builder, EventContentId)
def AddDevName(builder, DevName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(DevName), 0)
def ConquestMapExcelAddDevName(builder, DevName):
    """This method is deprecated. Please switch to AddDevName."""
    return AddDevName(builder, DevName)
def AddMapDifficulty(builder, MapDifficulty): builder.PrependInt32Slot(2, MapDifficulty, 0)
def ConquestMapExcelAddMapDifficulty(builder, MapDifficulty):
    """This method is deprecated. Please switch to AddMapDifficulty."""
    return AddMapDifficulty(builder, MapDifficulty)
def AddStepIndex(builder, StepIndex): builder.PrependInt32Slot(3, StepIndex, 0)
def ConquestMapExcelAddStepIndex(builder, StepIndex):
    """This method is deprecated. Please switch to AddStepIndex."""
    return AddStepIndex(builder, StepIndex)
def AddConquestMap(builder, ConquestMap): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(ConquestMap), 0)
def ConquestMapExcelAddConquestMap(builder, ConquestMap):
    """This method is deprecated. Please switch to AddConquestMap."""
    return AddConquestMap(builder, ConquestMap)
def AddStepEnterScenarioGroupId(builder, StepEnterScenarioGroupId): builder.PrependInt64Slot(5, StepEnterScenarioGroupId, 0)
def ConquestMapExcelAddStepEnterScenarioGroupId(builder, StepEnterScenarioGroupId):
    """This method is deprecated. Please switch to AddStepEnterScenarioGroupId."""
    return AddStepEnterScenarioGroupId(builder, StepEnterScenarioGroupId)
def AddStepOpenConditionType(builder, StepOpenConditionType): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(StepOpenConditionType), 0)
def ConquestMapExcelAddStepOpenConditionType(builder, StepOpenConditionType):
    """This method is deprecated. Please switch to AddStepOpenConditionType."""
    return AddStepOpenConditionType(builder, StepOpenConditionType)
def StartStepOpenConditionTypeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConquestMapExcelStartStepOpenConditionTypeVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStepOpenConditionTypeVector(builder, numElems)
def AddStepOpenConditionParameter(builder, StepOpenConditionParameter): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(StepOpenConditionParameter), 0)
def ConquestMapExcelAddStepOpenConditionParameter(builder, StepOpenConditionParameter):
    """This method is deprecated. Please switch to AddStepOpenConditionParameter."""
    return AddStepOpenConditionParameter(builder, StepOpenConditionParameter)
def StartStepOpenConditionParameterVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConquestMapExcelStartStepOpenConditionParameterVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStepOpenConditionParameterVector(builder, numElems)
def AddMapGoalLocalize(builder, MapGoalLocalize): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(MapGoalLocalize), 0)
def ConquestMapExcelAddMapGoalLocalize(builder, MapGoalLocalize):
    """This method is deprecated. Please switch to AddMapGoalLocalize."""
    return AddMapGoalLocalize(builder, MapGoalLocalize)
def AddStepGoalLocalize(builder, StepGoalLocalize): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(StepGoalLocalize), 0)
def ConquestMapExcelAddStepGoalLocalize(builder, StepGoalLocalize):
    """This method is deprecated. Please switch to AddStepGoalLocalize."""
    return AddStepGoalLocalize(builder, StepGoalLocalize)
def AddStepNameLocalize(builder, StepNameLocalize): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(StepNameLocalize), 0)
def ConquestMapExcelAddStepNameLocalize(builder, StepNameLocalize):
    """This method is deprecated. Please switch to AddStepNameLocalize."""
    return AddStepNameLocalize(builder, StepNameLocalize)
def AddConquestMapBG(builder, ConquestMapBG): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(ConquestMapBG), 0)
def ConquestMapExcelAddConquestMapBG(builder, ConquestMapBG):
    """This method is deprecated. Please switch to AddConquestMapBG."""
    return AddConquestMapBG(builder, ConquestMapBG)
def AddCameraSettingId(builder, CameraSettingId): builder.PrependInt64Slot(12, CameraSettingId, 0)
def ConquestMapExcelAddCameraSettingId(builder, CameraSettingId):
    """This method is deprecated. Please switch to AddCameraSettingId."""
    return AddCameraSettingId(builder, CameraSettingId)
def End(builder): return builder.EndObject()
def ConquestMapExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)