# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CostumeExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CostumeExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCostumeExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CostumeExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CostumeExcel
    def CostumeGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CostumeExcel
    def CostumeUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CostumeExcel
    def DevName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def ProductionStep_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CostumeExcel
    def IsDefault(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CostumeExcel
    def CollectionVisible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CostumeExcel
    def ReleaseDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def CollectionVisibleStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def CollectionVisibleEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def Rarity_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CostumeExcel
    def CharacterSkillListGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CostumeExcel
    def SpineResourceName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def SpineResourceNameDiorama(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def SpineResourceNameDioramaForFormConversion(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # CostumeExcel
    def SpineResourceNameDioramaForFormConversionLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CostumeExcel
    def SpineResourceNameDioramaForFormConversionIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        return o == 0

    # CostumeExcel
    def EntityMaterialType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CostumeExcel
    def ModelPrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def CafeModelPrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def EchelonModelPrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def StrategyModelPrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def TextureDir(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def CollectionTexturePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def CollectionBGTexturePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def CombatStyleTexturePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def UseObjectHPBAR(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CostumeExcel
    def TextureBoss(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def TextureSkillCard(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # CostumeExcel
    def TextureSkillCardLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CostumeExcel
    def TextureSkillCardIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        return o == 0

    # CostumeExcel
    def InformationPacel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def AnimationSSR(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def EnterStrategyAnimationName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CostumeExcel
    def AnimationValidator(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CostumeExcel
    def CharacterVoiceGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(31)
def CostumeExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCostumeGroupId(builder, CostumeGroupId): builder.PrependInt64Slot(0, CostumeGroupId, 0)
def CostumeExcelAddCostumeGroupId(builder, CostumeGroupId):
    """This method is deprecated. Please switch to AddCostumeGroupId."""
    return AddCostumeGroupId(builder, CostumeGroupId)
def AddCostumeUniqueId(builder, CostumeUniqueId): builder.PrependInt64Slot(1, CostumeUniqueId, 0)
def CostumeExcelAddCostumeUniqueId(builder, CostumeUniqueId):
    """This method is deprecated. Please switch to AddCostumeUniqueId."""
    return AddCostumeUniqueId(builder, CostumeUniqueId)
def AddDevName(builder, DevName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(DevName), 0)
def CostumeExcelAddDevName(builder, DevName):
    """This method is deprecated. Please switch to AddDevName."""
    return AddDevName(builder, DevName)
def AddProductionStep_(builder, ProductionStep_): builder.PrependInt32Slot(3, ProductionStep_, 0)
def CostumeExcelAddProductionStep_(builder, ProductionStep_):
    """This method is deprecated. Please switch to AddProductionStep_."""
    return AddProductionStep_(builder, ProductionStep_)
def AddIsDefault(builder, IsDefault): builder.PrependBoolSlot(4, IsDefault, 0)
def CostumeExcelAddIsDefault(builder, IsDefault):
    """This method is deprecated. Please switch to AddIsDefault."""
    return AddIsDefault(builder, IsDefault)
def AddCollectionVisible(builder, CollectionVisible): builder.PrependBoolSlot(5, CollectionVisible, 0)
def CostumeExcelAddCollectionVisible(builder, CollectionVisible):
    """This method is deprecated. Please switch to AddCollectionVisible."""
    return AddCollectionVisible(builder, CollectionVisible)
def AddReleaseDate(builder, ReleaseDate): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(ReleaseDate), 0)
def CostumeExcelAddReleaseDate(builder, ReleaseDate):
    """This method is deprecated. Please switch to AddReleaseDate."""
    return AddReleaseDate(builder, ReleaseDate)
def AddCollectionVisibleStartDate(builder, CollectionVisibleStartDate): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(CollectionVisibleStartDate), 0)
def CostumeExcelAddCollectionVisibleStartDate(builder, CollectionVisibleStartDate):
    """This method is deprecated. Please switch to AddCollectionVisibleStartDate."""
    return AddCollectionVisibleStartDate(builder, CollectionVisibleStartDate)
def AddCollectionVisibleEndDate(builder, CollectionVisibleEndDate): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(CollectionVisibleEndDate), 0)
def CostumeExcelAddCollectionVisibleEndDate(builder, CollectionVisibleEndDate):
    """This method is deprecated. Please switch to AddCollectionVisibleEndDate."""
    return AddCollectionVisibleEndDate(builder, CollectionVisibleEndDate)
def AddRarity_(builder, Rarity_): builder.PrependInt32Slot(9, Rarity_, 0)
def CostumeExcelAddRarity_(builder, Rarity_):
    """This method is deprecated. Please switch to AddRarity_."""
    return AddRarity_(builder, Rarity_)
def AddCharacterSkillListGroupId(builder, CharacterSkillListGroupId): builder.PrependInt64Slot(10, CharacterSkillListGroupId, 0)
def CostumeExcelAddCharacterSkillListGroupId(builder, CharacterSkillListGroupId):
    """This method is deprecated. Please switch to AddCharacterSkillListGroupId."""
    return AddCharacterSkillListGroupId(builder, CharacterSkillListGroupId)
def AddSpineResourceName(builder, SpineResourceName): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(SpineResourceName), 0)
def CostumeExcelAddSpineResourceName(builder, SpineResourceName):
    """This method is deprecated. Please switch to AddSpineResourceName."""
    return AddSpineResourceName(builder, SpineResourceName)
def AddSpineResourceNameDiorama(builder, SpineResourceNameDiorama): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(SpineResourceNameDiorama), 0)
def CostumeExcelAddSpineResourceNameDiorama(builder, SpineResourceNameDiorama):
    """This method is deprecated. Please switch to AddSpineResourceNameDiorama."""
    return AddSpineResourceNameDiorama(builder, SpineResourceNameDiorama)
def AddSpineResourceNameDioramaForFormConversion(builder, SpineResourceNameDioramaForFormConversion): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(SpineResourceNameDioramaForFormConversion), 0)
def CostumeExcelAddSpineResourceNameDioramaForFormConversion(builder, SpineResourceNameDioramaForFormConversion):
    """This method is deprecated. Please switch to AddSpineResourceNameDioramaForFormConversion."""
    return AddSpineResourceNameDioramaForFormConversion(builder, SpineResourceNameDioramaForFormConversion)
def StartSpineResourceNameDioramaForFormConversionVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CostumeExcelStartSpineResourceNameDioramaForFormConversionVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartSpineResourceNameDioramaForFormConversionVector(builder, numElems)
def AddEntityMaterialType_(builder, EntityMaterialType_): builder.PrependInt32Slot(14, EntityMaterialType_, 0)
def CostumeExcelAddEntityMaterialType_(builder, EntityMaterialType_):
    """This method is deprecated. Please switch to AddEntityMaterialType_."""
    return AddEntityMaterialType_(builder, EntityMaterialType_)
def AddModelPrefabName(builder, ModelPrefabName): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(ModelPrefabName), 0)
def CostumeExcelAddModelPrefabName(builder, ModelPrefabName):
    """This method is deprecated. Please switch to AddModelPrefabName."""
    return AddModelPrefabName(builder, ModelPrefabName)
def AddCafeModelPrefabName(builder, CafeModelPrefabName): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(CafeModelPrefabName), 0)
def CostumeExcelAddCafeModelPrefabName(builder, CafeModelPrefabName):
    """This method is deprecated. Please switch to AddCafeModelPrefabName."""
    return AddCafeModelPrefabName(builder, CafeModelPrefabName)
def AddEchelonModelPrefabName(builder, EchelonModelPrefabName): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(EchelonModelPrefabName), 0)
def CostumeExcelAddEchelonModelPrefabName(builder, EchelonModelPrefabName):
    """This method is deprecated. Please switch to AddEchelonModelPrefabName."""
    return AddEchelonModelPrefabName(builder, EchelonModelPrefabName)
def AddStrategyModelPrefabName(builder, StrategyModelPrefabName): builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyModelPrefabName), 0)
def CostumeExcelAddStrategyModelPrefabName(builder, StrategyModelPrefabName):
    """This method is deprecated. Please switch to AddStrategyModelPrefabName."""
    return AddStrategyModelPrefabName(builder, StrategyModelPrefabName)
def AddTextureDir(builder, TextureDir): builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(TextureDir), 0)
def CostumeExcelAddTextureDir(builder, TextureDir):
    """This method is deprecated. Please switch to AddTextureDir."""
    return AddTextureDir(builder, TextureDir)
def AddCollectionTexturePath(builder, CollectionTexturePath): builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(CollectionTexturePath), 0)
def CostumeExcelAddCollectionTexturePath(builder, CollectionTexturePath):
    """This method is deprecated. Please switch to AddCollectionTexturePath."""
    return AddCollectionTexturePath(builder, CollectionTexturePath)
def AddCollectionBGTexturePath(builder, CollectionBGTexturePath): builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(CollectionBGTexturePath), 0)
def CostumeExcelAddCollectionBGTexturePath(builder, CollectionBGTexturePath):
    """This method is deprecated. Please switch to AddCollectionBGTexturePath."""
    return AddCollectionBGTexturePath(builder, CollectionBGTexturePath)
def AddCombatStyleTexturePath(builder, CombatStyleTexturePath): builder.PrependUOffsetTRelativeSlot(22, flatbuffers.number_types.UOffsetTFlags.py_type(CombatStyleTexturePath), 0)
def CostumeExcelAddCombatStyleTexturePath(builder, CombatStyleTexturePath):
    """This method is deprecated. Please switch to AddCombatStyleTexturePath."""
    return AddCombatStyleTexturePath(builder, CombatStyleTexturePath)
def AddUseObjectHPBAR(builder, UseObjectHPBAR): builder.PrependBoolSlot(23, UseObjectHPBAR, 0)
def CostumeExcelAddUseObjectHPBAR(builder, UseObjectHPBAR):
    """This method is deprecated. Please switch to AddUseObjectHPBAR."""
    return AddUseObjectHPBAR(builder, UseObjectHPBAR)
def AddTextureBoss(builder, TextureBoss): builder.PrependUOffsetTRelativeSlot(24, flatbuffers.number_types.UOffsetTFlags.py_type(TextureBoss), 0)
def CostumeExcelAddTextureBoss(builder, TextureBoss):
    """This method is deprecated. Please switch to AddTextureBoss."""
    return AddTextureBoss(builder, TextureBoss)
def AddTextureSkillCard(builder, TextureSkillCard): builder.PrependUOffsetTRelativeSlot(25, flatbuffers.number_types.UOffsetTFlags.py_type(TextureSkillCard), 0)
def CostumeExcelAddTextureSkillCard(builder, TextureSkillCard):
    """This method is deprecated. Please switch to AddTextureSkillCard."""
    return AddTextureSkillCard(builder, TextureSkillCard)
def StartTextureSkillCardVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CostumeExcelStartTextureSkillCardVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTextureSkillCardVector(builder, numElems)
def AddInformationPacel(builder, InformationPacel): builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(InformationPacel), 0)
def CostumeExcelAddInformationPacel(builder, InformationPacel):
    """This method is deprecated. Please switch to AddInformationPacel."""
    return AddInformationPacel(builder, InformationPacel)
def AddAnimationSSR(builder, AnimationSSR): builder.PrependUOffsetTRelativeSlot(27, flatbuffers.number_types.UOffsetTFlags.py_type(AnimationSSR), 0)
def CostumeExcelAddAnimationSSR(builder, AnimationSSR):
    """This method is deprecated. Please switch to AddAnimationSSR."""
    return AddAnimationSSR(builder, AnimationSSR)
def AddEnterStrategyAnimationName(builder, EnterStrategyAnimationName): builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(EnterStrategyAnimationName), 0)
def CostumeExcelAddEnterStrategyAnimationName(builder, EnterStrategyAnimationName):
    """This method is deprecated. Please switch to AddEnterStrategyAnimationName."""
    return AddEnterStrategyAnimationName(builder, EnterStrategyAnimationName)
def AddAnimationValidator(builder, AnimationValidator): builder.PrependBoolSlot(29, AnimationValidator, 0)
def CostumeExcelAddAnimationValidator(builder, AnimationValidator):
    """This method is deprecated. Please switch to AddAnimationValidator."""
    return AddAnimationValidator(builder, AnimationValidator)
def AddCharacterVoiceGroupId(builder, CharacterVoiceGroupId): builder.PrependInt64Slot(30, CharacterVoiceGroupId, 0)
def CostumeExcelAddCharacterVoiceGroupId(builder, CharacterVoiceGroupId):
    """This method is deprecated. Please switch to AddCharacterVoiceGroupId."""
    return AddCharacterVoiceGroupId(builder, CharacterVoiceGroupId)
def End(builder): return builder.EndObject()
def CostumeExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)