# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LocalizeEtcExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LocalizeEtcExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLocalizeEtcExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LocalizeEtcExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LocalizeEtcExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # LocalizeEtcExcel
    def NameKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeEtcExcel
    def DescriptionKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeEtcExcel
    def NameJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeEtcExcel
    def DescriptionJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(5)
def LocalizeEtcExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddKey(builder, Key): builder.PrependUint32Slot(0, Key, 0)
def LocalizeEtcExcelAddKey(builder, Key):
    """This method is deprecated. Please switch to AddKey."""
    return AddKey(builder, Key)
def AddNameKr(builder, NameKr): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(NameKr), 0)
def LocalizeEtcExcelAddNameKr(builder, NameKr):
    """This method is deprecated. Please switch to AddNameKr."""
    return AddNameKr(builder, NameKr)
def AddDescriptionKr(builder, DescriptionKr): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(DescriptionKr), 0)
def LocalizeEtcExcelAddDescriptionKr(builder, DescriptionKr):
    """This method is deprecated. Please switch to AddDescriptionKr."""
    return AddDescriptionKr(builder, DescriptionKr)
def AddNameJp(builder, NameJp): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(NameJp), 0)
def LocalizeEtcExcelAddNameJp(builder, NameJp):
    """This method is deprecated. Please switch to AddNameJp."""
    return AddNameJp(builder, NameJp)
def AddDescriptionJp(builder, DescriptionJp): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(DescriptionJp), 0)
def LocalizeEtcExcelAddDescriptionJp(builder, DescriptionJp):
    """This method is deprecated. Please switch to AddDescriptionJp."""
    return AddDescriptionJp(builder, DescriptionJp)
def End(builder): return builder.EndObject()
def LocalizeEtcExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)