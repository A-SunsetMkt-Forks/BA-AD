# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ShopFilterClassifiedExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ShopFilterClassifiedExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsShopFilterClassifiedExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ShopFilterClassifiedExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ShopFilterClassifiedExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def CategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def ConsumeParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def ConsumeParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def ShopFilterType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def GoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(6)
def ShopFilterClassifiedExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def ShopFilterClassifiedExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddCategoryType(builder, CategoryType): builder.PrependInt32Slot(1, CategoryType, 0)
def ShopFilterClassifiedExcelAddCategoryType(builder, CategoryType):
    """This method is deprecated. Please switch to AddCategoryType."""
    return AddCategoryType(builder, CategoryType)
def AddConsumeParcelType(builder, ConsumeParcelType): builder.PrependInt32Slot(2, ConsumeParcelType, 0)
def ShopFilterClassifiedExcelAddConsumeParcelType(builder, ConsumeParcelType):
    """This method is deprecated. Please switch to AddConsumeParcelType."""
    return AddConsumeParcelType(builder, ConsumeParcelType)
def AddConsumeParcelId(builder, ConsumeParcelId): builder.PrependInt64Slot(3, ConsumeParcelId, 0)
def ShopFilterClassifiedExcelAddConsumeParcelId(builder, ConsumeParcelId):
    """This method is deprecated. Please switch to AddConsumeParcelId."""
    return AddConsumeParcelId(builder, ConsumeParcelId)
def AddShopFilterType_(builder, ShopFilterType_): builder.PrependInt32Slot(4, ShopFilterType_, 0)
def ShopFilterClassifiedExcelAddShopFilterType_(builder, ShopFilterType_):
    """This method is deprecated. Please switch to AddShopFilterType_."""
    return AddShopFilterType_(builder, ShopFilterType_)
def AddGoodsId(builder, GoodsId): builder.PrependInt64Slot(5, GoodsId, 0)
def ShopFilterClassifiedExcelAddGoodsId(builder, GoodsId):
    """This method is deprecated. Please switch to AddGoodsId."""
    return AddGoodsId(builder, GoodsId)
def End(builder): return builder.EndObject()
def ShopFilterClassifiedExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)