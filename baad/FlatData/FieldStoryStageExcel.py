# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FieldStoryStageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FieldStoryStageExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFieldStoryStageExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # FieldStoryStageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FieldStoryStageExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def SeasonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # FieldStoryStageExcel
    def BattleDuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def StageTopography_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def RecommandLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def GroundID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def BGMId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def FixedEchelonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldStoryStageExcel
    def SkipFormationSettings(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(10)
def FieldStoryStageExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def FieldStoryStageExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddSeasonId(builder, SeasonId): builder.PrependInt64Slot(1, SeasonId, 0)
def FieldStoryStageExcelAddSeasonId(builder, SeasonId):
    """This method is deprecated. Please switch to AddSeasonId."""
    return AddSeasonId(builder, SeasonId)
def AddName(builder, Name): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def FieldStoryStageExcelAddName(builder, Name):
    """This method is deprecated. Please switch to AddName."""
    return AddName(builder, Name)
def AddBattleDuration(builder, BattleDuration): builder.PrependInt64Slot(3, BattleDuration, 0)
def FieldStoryStageExcelAddBattleDuration(builder, BattleDuration):
    """This method is deprecated. Please switch to AddBattleDuration."""
    return AddBattleDuration(builder, BattleDuration)
def AddStageTopography_(builder, StageTopography_): builder.PrependInt32Slot(4, StageTopography_, 0)
def FieldStoryStageExcelAddStageTopography_(builder, StageTopography_):
    """This method is deprecated. Please switch to AddStageTopography_."""
    return AddStageTopography_(builder, StageTopography_)
def AddRecommandLevel(builder, RecommandLevel): builder.PrependInt32Slot(5, RecommandLevel, 0)
def FieldStoryStageExcelAddRecommandLevel(builder, RecommandLevel):
    """This method is deprecated. Please switch to AddRecommandLevel."""
    return AddRecommandLevel(builder, RecommandLevel)
def AddGroundID(builder, GroundID): builder.PrependInt64Slot(6, GroundID, 0)
def FieldStoryStageExcelAddGroundID(builder, GroundID):
    """This method is deprecated. Please switch to AddGroundID."""
    return AddGroundID(builder, GroundID)
def AddBGMId(builder, BGMId): builder.PrependInt64Slot(7, BGMId, 0)
def FieldStoryStageExcelAddBGMId(builder, BGMId):
    """This method is deprecated. Please switch to AddBGMId."""
    return AddBGMId(builder, BGMId)
def AddFixedEchelonId(builder, FixedEchelonId): builder.PrependInt64Slot(8, FixedEchelonId, 0)
def FieldStoryStageExcelAddFixedEchelonId(builder, FixedEchelonId):
    """This method is deprecated. Please switch to AddFixedEchelonId."""
    return AddFixedEchelonId(builder, FixedEchelonId)
def AddSkipFormationSettings(builder, SkipFormationSettings): builder.PrependBoolSlot(9, SkipFormationSettings, 0)
def FieldStoryStageExcelAddSkipFormationSettings(builder, SkipFormationSettings):
    """This method is deprecated. Please switch to AddSkipFormationSettings."""
    return AddSkipFormationSettings(builder, SkipFormationSettings)
def End(builder): return builder.EndObject()
def FieldStoryStageExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)