# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConstNewbieContentExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConstNewbieContentExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConstNewbieContentExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConstNewbieContentExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConstNewbieContentExcel
    def NewbieGachaReleaseDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstNewbieContentExcel
    def NewbieGachaCheckDays(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstNewbieContentExcel
    def NewbieGachaTokenGraceTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstNewbieContentExcel
    def NewbieAttendanceReleaseDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstNewbieContentExcel
    def NewbieAttendanceStartableEndDay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstNewbieContentExcel
    def NewbieAttendanceEndDay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(6)
def ConstNewbieContentExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddNewbieGachaReleaseDate(builder, NewbieGachaReleaseDate): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(NewbieGachaReleaseDate), 0)
def ConstNewbieContentExcelAddNewbieGachaReleaseDate(builder, NewbieGachaReleaseDate):
    """This method is deprecated. Please switch to AddNewbieGachaReleaseDate."""
    return AddNewbieGachaReleaseDate(builder, NewbieGachaReleaseDate)
def AddNewbieGachaCheckDays(builder, NewbieGachaCheckDays): builder.PrependInt32Slot(1, NewbieGachaCheckDays, 0)
def ConstNewbieContentExcelAddNewbieGachaCheckDays(builder, NewbieGachaCheckDays):
    """This method is deprecated. Please switch to AddNewbieGachaCheckDays."""
    return AddNewbieGachaCheckDays(builder, NewbieGachaCheckDays)
def AddNewbieGachaTokenGraceTime(builder, NewbieGachaTokenGraceTime): builder.PrependInt32Slot(2, NewbieGachaTokenGraceTime, 0)
def ConstNewbieContentExcelAddNewbieGachaTokenGraceTime(builder, NewbieGachaTokenGraceTime):
    """This method is deprecated. Please switch to AddNewbieGachaTokenGraceTime."""
    return AddNewbieGachaTokenGraceTime(builder, NewbieGachaTokenGraceTime)
def AddNewbieAttendanceReleaseDate(builder, NewbieAttendanceReleaseDate): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(NewbieAttendanceReleaseDate), 0)
def ConstNewbieContentExcelAddNewbieAttendanceReleaseDate(builder, NewbieAttendanceReleaseDate):
    """This method is deprecated. Please switch to AddNewbieAttendanceReleaseDate."""
    return AddNewbieAttendanceReleaseDate(builder, NewbieAttendanceReleaseDate)
def AddNewbieAttendanceStartableEndDay(builder, NewbieAttendanceStartableEndDay): builder.PrependInt32Slot(4, NewbieAttendanceStartableEndDay, 0)
def ConstNewbieContentExcelAddNewbieAttendanceStartableEndDay(builder, NewbieAttendanceStartableEndDay):
    """This method is deprecated. Please switch to AddNewbieAttendanceStartableEndDay."""
    return AddNewbieAttendanceStartableEndDay(builder, NewbieAttendanceStartableEndDay)
def AddNewbieAttendanceEndDay(builder, NewbieAttendanceEndDay): builder.PrependInt32Slot(5, NewbieAttendanceEndDay, 0)
def ConstNewbieContentExcelAddNewbieAttendanceEndDay(builder, NewbieAttendanceEndDay):
    """This method is deprecated. Please switch to AddNewbieAttendanceEndDay."""
    return AddNewbieAttendanceEndDay(builder, NewbieAttendanceEndDay)
def End(builder): return builder.EndObject()
def ConstNewbieContentExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)