# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VoiceTimelineExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = VoiceTimelineExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsVoiceTimelineExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # VoiceTimelineExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VoiceTimelineExcel
    def UniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # VoiceTimelineExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # VoiceTimelineExcel
    def Nation_(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # VoiceTimelineExcel
    def Nation_AsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # VoiceTimelineExcel
    def Nation_Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # VoiceTimelineExcel
    def Nation_IsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # VoiceTimelineExcel
    def Path(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # VoiceTimelineExcel
    def PathLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # VoiceTimelineExcel
    def PathIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # VoiceTimelineExcel
    def SoundVolume(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # VoiceTimelineExcel
    def SoundVolumeAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # VoiceTimelineExcel
    def SoundVolumeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # VoiceTimelineExcel
    def SoundVolumeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

def Start(builder): builder.StartObject(5)
def VoiceTimelineExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddUniqueId(builder, UniqueId): builder.PrependInt64Slot(0, UniqueId, 0)
def VoiceTimelineExcelAddUniqueId(builder, UniqueId):
    """This method is deprecated. Please switch to AddUniqueId."""
    return AddUniqueId(builder, UniqueId)
def AddId(builder, Id): builder.PrependUint32Slot(1, Id, 0)
def VoiceTimelineExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddNation_(builder, Nation_): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Nation_), 0)
def VoiceTimelineExcelAddNation_(builder, Nation_):
    """This method is deprecated. Please switch to AddNation_."""
    return AddNation_(builder, Nation_)
def StartNation_Vector(builder, numElems): return builder.StartVector(4, numElems, 4)
def VoiceTimelineExcelStartNation_Vector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartNation_Vector(builder, numElems)
def AddPath(builder, Path): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(Path), 0)
def VoiceTimelineExcelAddPath(builder, Path):
    """This method is deprecated. Please switch to AddPath."""
    return AddPath(builder, Path)
def StartPathVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def VoiceTimelineExcelStartPathVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPathVector(builder, numElems)
def AddSoundVolume(builder, SoundVolume): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(SoundVolume), 0)
def VoiceTimelineExcelAddSoundVolume(builder, SoundVolume):
    """This method is deprecated. Please switch to AddSoundVolume."""
    return AddSoundVolume(builder, SoundVolume)
def StartSoundVolumeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def VoiceTimelineExcelStartSoundVolumeVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartSoundVolumeVector(builder, numElems)
def End(builder): return builder.EndObject()
def VoiceTimelineExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)