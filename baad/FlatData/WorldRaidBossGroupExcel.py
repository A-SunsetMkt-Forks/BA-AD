# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WorldRaidBossGroupExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WorldRaidBossGroupExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWorldRaidBossGroupExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # WorldRaidBossGroupExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WorldRaidBossGroupExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WorldRaidBossGroupExcel
    def WorldRaidBossGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WorldRaidBossGroupExcel
    def WorldBossName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def WorldBossPopupPortrait(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def WorldBossPopupBG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def WorldBossParcelPortrait(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def WorldBossListParcel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def WorldBossHP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WorldRaidBossGroupExcel
    def UIHideBeforeSpawn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WorldRaidBossGroupExcel
    def HideAnotherBossKilled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WorldRaidBossGroupExcel
    def WorldBossClearRewardGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WorldRaidBossGroupExcel
    def AnotherBossKilled(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # WorldRaidBossGroupExcel
    def AnotherBossKilledAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # WorldRaidBossGroupExcel
    def AnotherBossKilledLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # WorldRaidBossGroupExcel
    def AnotherBossKilledIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        return o == 0

    # WorldRaidBossGroupExcel
    def EchelonConstraintGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # WorldRaidBossGroupExcel
    def ExclusiveOperatorBossSpawn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def ExclusiveOperatorBossKill(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def ExclusiveOperatorScenarioBattle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def ExclusiveOperatorBossDamaged(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WorldRaidBossGroupExcel
    def BossGroupOpenCondition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(18)
def WorldRaidBossGroupExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def WorldRaidBossGroupExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddWorldRaidBossGroupId(builder, WorldRaidBossGroupId): builder.PrependInt64Slot(1, WorldRaidBossGroupId, 0)
def WorldRaidBossGroupExcelAddWorldRaidBossGroupId(builder, WorldRaidBossGroupId):
    """This method is deprecated. Please switch to AddWorldRaidBossGroupId."""
    return AddWorldRaidBossGroupId(builder, WorldRaidBossGroupId)
def AddWorldBossName(builder, WorldBossName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(WorldBossName), 0)
def WorldRaidBossGroupExcelAddWorldBossName(builder, WorldBossName):
    """This method is deprecated. Please switch to AddWorldBossName."""
    return AddWorldBossName(builder, WorldBossName)
def AddWorldBossPopupPortrait(builder, WorldBossPopupPortrait): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(WorldBossPopupPortrait), 0)
def WorldRaidBossGroupExcelAddWorldBossPopupPortrait(builder, WorldBossPopupPortrait):
    """This method is deprecated. Please switch to AddWorldBossPopupPortrait."""
    return AddWorldBossPopupPortrait(builder, WorldBossPopupPortrait)
def AddWorldBossPopupBG(builder, WorldBossPopupBG): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(WorldBossPopupBG), 0)
def WorldRaidBossGroupExcelAddWorldBossPopupBG(builder, WorldBossPopupBG):
    """This method is deprecated. Please switch to AddWorldBossPopupBG."""
    return AddWorldBossPopupBG(builder, WorldBossPopupBG)
def AddWorldBossParcelPortrait(builder, WorldBossParcelPortrait): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(WorldBossParcelPortrait), 0)
def WorldRaidBossGroupExcelAddWorldBossParcelPortrait(builder, WorldBossParcelPortrait):
    """This method is deprecated. Please switch to AddWorldBossParcelPortrait."""
    return AddWorldBossParcelPortrait(builder, WorldBossParcelPortrait)
def AddWorldBossListParcel(builder, WorldBossListParcel): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(WorldBossListParcel), 0)
def WorldRaidBossGroupExcelAddWorldBossListParcel(builder, WorldBossListParcel):
    """This method is deprecated. Please switch to AddWorldBossListParcel."""
    return AddWorldBossListParcel(builder, WorldBossListParcel)
def AddWorldBossHP(builder, WorldBossHP): builder.PrependInt64Slot(7, WorldBossHP, 0)
def WorldRaidBossGroupExcelAddWorldBossHP(builder, WorldBossHP):
    """This method is deprecated. Please switch to AddWorldBossHP."""
    return AddWorldBossHP(builder, WorldBossHP)
def AddUIHideBeforeSpawn(builder, UIHideBeforeSpawn): builder.PrependBoolSlot(8, UIHideBeforeSpawn, 0)
def WorldRaidBossGroupExcelAddUIHideBeforeSpawn(builder, UIHideBeforeSpawn):
    """This method is deprecated. Please switch to AddUIHideBeforeSpawn."""
    return AddUIHideBeforeSpawn(builder, UIHideBeforeSpawn)
def AddHideAnotherBossKilled(builder, HideAnotherBossKilled): builder.PrependBoolSlot(9, HideAnotherBossKilled, 0)
def WorldRaidBossGroupExcelAddHideAnotherBossKilled(builder, HideAnotherBossKilled):
    """This method is deprecated. Please switch to AddHideAnotherBossKilled."""
    return AddHideAnotherBossKilled(builder, HideAnotherBossKilled)
def AddWorldBossClearRewardGroupId(builder, WorldBossClearRewardGroupId): builder.PrependInt64Slot(10, WorldBossClearRewardGroupId, 0)
def WorldRaidBossGroupExcelAddWorldBossClearRewardGroupId(builder, WorldBossClearRewardGroupId):
    """This method is deprecated. Please switch to AddWorldBossClearRewardGroupId."""
    return AddWorldBossClearRewardGroupId(builder, WorldBossClearRewardGroupId)
def AddAnotherBossKilled(builder, AnotherBossKilled): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(AnotherBossKilled), 0)
def WorldRaidBossGroupExcelAddAnotherBossKilled(builder, AnotherBossKilled):
    """This method is deprecated. Please switch to AddAnotherBossKilled."""
    return AddAnotherBossKilled(builder, AnotherBossKilled)
def StartAnotherBossKilledVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def WorldRaidBossGroupExcelStartAnotherBossKilledVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartAnotherBossKilledVector(builder, numElems)
def AddEchelonConstraintGroupId(builder, EchelonConstraintGroupId): builder.PrependInt64Slot(12, EchelonConstraintGroupId, 0)
def WorldRaidBossGroupExcelAddEchelonConstraintGroupId(builder, EchelonConstraintGroupId):
    """This method is deprecated. Please switch to AddEchelonConstraintGroupId."""
    return AddEchelonConstraintGroupId(builder, EchelonConstraintGroupId)
def AddExclusiveOperatorBossSpawn(builder, ExclusiveOperatorBossSpawn): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(ExclusiveOperatorBossSpawn), 0)
def WorldRaidBossGroupExcelAddExclusiveOperatorBossSpawn(builder, ExclusiveOperatorBossSpawn):
    """This method is deprecated. Please switch to AddExclusiveOperatorBossSpawn."""
    return AddExclusiveOperatorBossSpawn(builder, ExclusiveOperatorBossSpawn)
def AddExclusiveOperatorBossKill(builder, ExclusiveOperatorBossKill): builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(ExclusiveOperatorBossKill), 0)
def WorldRaidBossGroupExcelAddExclusiveOperatorBossKill(builder, ExclusiveOperatorBossKill):
    """This method is deprecated. Please switch to AddExclusiveOperatorBossKill."""
    return AddExclusiveOperatorBossKill(builder, ExclusiveOperatorBossKill)
def AddExclusiveOperatorScenarioBattle(builder, ExclusiveOperatorScenarioBattle): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(ExclusiveOperatorScenarioBattle), 0)
def WorldRaidBossGroupExcelAddExclusiveOperatorScenarioBattle(builder, ExclusiveOperatorScenarioBattle):
    """This method is deprecated. Please switch to AddExclusiveOperatorScenarioBattle."""
    return AddExclusiveOperatorScenarioBattle(builder, ExclusiveOperatorScenarioBattle)
def AddExclusiveOperatorBossDamaged(builder, ExclusiveOperatorBossDamaged): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(ExclusiveOperatorBossDamaged), 0)
def WorldRaidBossGroupExcelAddExclusiveOperatorBossDamaged(builder, ExclusiveOperatorBossDamaged):
    """This method is deprecated. Please switch to AddExclusiveOperatorBossDamaged."""
    return AddExclusiveOperatorBossDamaged(builder, ExclusiveOperatorBossDamaged)
def AddBossGroupOpenCondition(builder, BossGroupOpenCondition): builder.PrependInt64Slot(17, BossGroupOpenCondition, 0)
def WorldRaidBossGroupExcelAddBossGroupOpenCondition(builder, BossGroupOpenCondition):
    """This method is deprecated. Please switch to AddBossGroupOpenCondition."""
    return AddBossGroupOpenCondition(builder, BossGroupOpenCondition)
def End(builder): return builder.EndObject()
def WorldRaidBossGroupExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)