# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConstCommonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConstCommonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConstCommonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConstCommonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConstCommonExcel
    def CampaignMainStageMaxRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CampaignMainStageBestRecord(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def HardAdventurePlayCountRecoverDailyNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def HardStageCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TacticRankClearTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BaseTimeScale(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def GachaPercentage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AcademyFavorZoneId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafePresetSlotCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeMonologueIntervalMillisec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeMonologueDefaultDuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeBubbleIdleDurationMilliSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FindGiftTimeLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeAutoChargePeriodInMsc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeProductionDecimalPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeSetGroupApplyCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WeekDungeonFindGiftRewardLimitCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def StageFailedCurrencyRefundRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EnterDeposit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountMaxLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MainSquadExpBonus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def SupportSquadExpBonus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountExpRatio(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MissionToastLifeTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExpItemInsertLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExpItemInsertAccelTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharacterLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EquipmentLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExpEquipInsertLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EquipLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def NicknameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftDuration(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConstCommonExcel
    def CraftDurationAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConstCommonExcel
    def CraftDurationLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def CraftDurationIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        return o == 0

    # ConstCommonExcel
    def CraftLimitTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ShiftingCraftDuration(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConstCommonExcel
    def ShiftingCraftDurationAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConstCommonExcel
    def ShiftingCraftDurationLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def ShiftingCraftDurationIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        return o == 0

    # ConstCommonExcel
    def ShiftingCraftTicketConsumeAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ShiftingCraftSlotMaxCapacity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftTicketItemUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftTicketConsumeAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AcademyEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AcademyEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AcademyTicketCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MassangerMessageExpireDay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftLeafNodeGenerateLv1Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftLeafNodeGenerateLv2Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialGachaShopId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BeforehandGachaShopId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialGachaGoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevel(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevelAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevelLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevelIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        return o == 0

    # ConstCommonExcel
    def ScenarioAutoDelayMillisec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConstCommonExcel
    def JoinOrCreateClanCoolTimeFromHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanMaxMember(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanSearchResultCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanMaxApplicant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanRejoinCoolTimeFromSecond(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanWordBalloonMaxCharacter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(112))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallNameRenameCoolTimeFromHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(114))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallNameMinimumLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(116))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallNameMaximumLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(118))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LobbyToScreenModeWaitTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(120))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ScreenshotToLobbyButtonHideDelay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PrologueScenarioID01(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PrologueScenarioID02(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(126))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialHardStage11(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(128))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialSpeedButtonStage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialCharacterDefaultCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialShopCategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(134))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AdventureStrategyPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(136))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WeekDungoenTacticPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(138))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidTacticPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidOpponentListAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(142))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequired(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequiredAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequiredLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequiredIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        return o == 0

    # ConstCommonExcel
    def PostExpiredDayAttendance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(146))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PostExpiredDayInventoryOverflow(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(148))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PostExpiredDayGameManager(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(150))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def UILabelCharacterWrap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(152))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstCommonExcel
    def RequestTimeOut(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(154))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConstCommonExcel
    def MailStorageSoftCap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(156))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MailStorageHardCap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(158))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckStorageSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckNoStarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeck1StarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeck2StarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeck3StarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PublicSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(172))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PassiveSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(174))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExtraPassiveSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(176))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountCommentMaxLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(178))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeSummonCoolTimeFromHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(180))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStageDailyClearCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(182))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStageEntryTimeLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(184))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStageEntryTimeBuffer(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(186))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStagePointAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(188))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStagePointPerApMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(190))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStagePointPerApMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(192))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountLinkReward(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(194))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MonthlyProductCheckDays(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(196))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WeaponLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(198))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ShowRaidMyListCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(200))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MaxLevelExpMasterCoinRatio(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(202))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(204))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(206))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidTicketCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(208))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TimeAttackDungeonScenarioId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(210))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstCommonExcel
    def TimeAttackDungoenPlayCountPerTicket(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(212))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TimeAttackDungeonEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(214))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TimeAttackDungeonEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(216))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TimeAttackDungeonEnterCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(218))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanLeaderTransferLastLoginLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(220))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MonthlyProductRepurchasePopupLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(222))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CommonFavorItemTags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(224))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConstCommonExcel
    def CommonFavorItemTagsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(224))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConstCommonExcel
    def CommonFavorItemTagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(224))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def CommonFavorItemTagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(224))
        return o == 0

    # ConstCommonExcel
    def MaxApMasterCoinPerWeek(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(226))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftOpenExpTier1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(228))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftOpenExpTier2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(230))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftOpenExpTier3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(232))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharacterEquipmentGearSlot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(234))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BirthDayDDay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(236))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RecommendedFriendsLvDifferenceLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(238))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def DDosDetectCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(240))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def DDosCheckIntervalInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(242))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MaxFriendsCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(244))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MaxFriendsRequest(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(246))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FriendsSearchRequestCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(248))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FriendsMaxApplicant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(250))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def IdCardDefaultCharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(252))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def IdCardDefaultBgId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(254))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WorldRaidGemEnterCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(256))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WorldRaidGemEnterAmout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(258))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FriendIdCardCommentMaxLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(260))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationPresetNumberOfEchelonTab(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(262))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationPresetNumberOfEchelon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(264))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationPresetRecentNumberOfEchelon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(266))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationPresetEchelonTabTextLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(268))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationPresetEchelonSlotTextLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(270))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharProfileRowIntervalKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(272))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharProfileRowIntervalJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(274))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharProfilePopupRowIntervalKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(276))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharProfilePopupRowIntervalJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(278))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BeforehandGachaCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(280))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BeforehandGachaGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(282))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RenewalDisplayOrderDay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(284))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EmblemDefaultId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(286))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BirthdayMailStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(288))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstCommonExcel
    def BirthdayMailRemainDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(290))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BirthdayMailParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(292))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BirthdayMailParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(294))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BirthdayMailParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(296))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckAverageDeckCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(298))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckWorldRaidSaveConditionCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(300))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckShowCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(302))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharacterMaxLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(304))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PotentialBonusStatMaxLevelMaxHP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(306))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PotentialBonusStatMaxLevelAttackPower(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(308))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PotentialBonusStatMaxLevelHealPower(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(310))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PotentialOpenConditionCharacterLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(312))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AssistStrangerMinLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(314))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AssistStrangerMaxLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(316))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MaxBlockedUserCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(318))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(158)
def ConstCommonExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCampaignMainStageMaxRank(builder, CampaignMainStageMaxRank): builder.PrependInt32Slot(0, CampaignMainStageMaxRank, 0)
def ConstCommonExcelAddCampaignMainStageMaxRank(builder, CampaignMainStageMaxRank):
    """This method is deprecated. Please switch to AddCampaignMainStageMaxRank."""
    return AddCampaignMainStageMaxRank(builder, CampaignMainStageMaxRank)
def AddCampaignMainStageBestRecord(builder, CampaignMainStageBestRecord): builder.PrependInt32Slot(1, CampaignMainStageBestRecord, 0)
def ConstCommonExcelAddCampaignMainStageBestRecord(builder, CampaignMainStageBestRecord):
    """This method is deprecated. Please switch to AddCampaignMainStageBestRecord."""
    return AddCampaignMainStageBestRecord(builder, CampaignMainStageBestRecord)
def AddHardAdventurePlayCountRecoverDailyNumber(builder, HardAdventurePlayCountRecoverDailyNumber): builder.PrependInt32Slot(2, HardAdventurePlayCountRecoverDailyNumber, 0)
def ConstCommonExcelAddHardAdventurePlayCountRecoverDailyNumber(builder, HardAdventurePlayCountRecoverDailyNumber):
    """This method is deprecated. Please switch to AddHardAdventurePlayCountRecoverDailyNumber."""
    return AddHardAdventurePlayCountRecoverDailyNumber(builder, HardAdventurePlayCountRecoverDailyNumber)
def AddHardStageCount(builder, HardStageCount): builder.PrependInt32Slot(3, HardStageCount, 0)
def ConstCommonExcelAddHardStageCount(builder, HardStageCount):
    """This method is deprecated. Please switch to AddHardStageCount."""
    return AddHardStageCount(builder, HardStageCount)
def AddTacticRankClearTime(builder, TacticRankClearTime): builder.PrependInt32Slot(4, TacticRankClearTime, 0)
def ConstCommonExcelAddTacticRankClearTime(builder, TacticRankClearTime):
    """This method is deprecated. Please switch to AddTacticRankClearTime."""
    return AddTacticRankClearTime(builder, TacticRankClearTime)
def AddBaseTimeScale(builder, BaseTimeScale): builder.PrependInt64Slot(5, BaseTimeScale, 0)
def ConstCommonExcelAddBaseTimeScale(builder, BaseTimeScale):
    """This method is deprecated. Please switch to AddBaseTimeScale."""
    return AddBaseTimeScale(builder, BaseTimeScale)
def AddGachaPercentage(builder, GachaPercentage): builder.PrependInt32Slot(6, GachaPercentage, 0)
def ConstCommonExcelAddGachaPercentage(builder, GachaPercentage):
    """This method is deprecated. Please switch to AddGachaPercentage."""
    return AddGachaPercentage(builder, GachaPercentage)
def AddAcademyFavorZoneId(builder, AcademyFavorZoneId): builder.PrependInt64Slot(7, AcademyFavorZoneId, 0)
def ConstCommonExcelAddAcademyFavorZoneId(builder, AcademyFavorZoneId):
    """This method is deprecated. Please switch to AddAcademyFavorZoneId."""
    return AddAcademyFavorZoneId(builder, AcademyFavorZoneId)
def AddCafePresetSlotCount(builder, CafePresetSlotCount): builder.PrependInt32Slot(8, CafePresetSlotCount, 0)
def ConstCommonExcelAddCafePresetSlotCount(builder, CafePresetSlotCount):
    """This method is deprecated. Please switch to AddCafePresetSlotCount."""
    return AddCafePresetSlotCount(builder, CafePresetSlotCount)
def AddCafeMonologueIntervalMillisec(builder, CafeMonologueIntervalMillisec): builder.PrependInt64Slot(9, CafeMonologueIntervalMillisec, 0)
def ConstCommonExcelAddCafeMonologueIntervalMillisec(builder, CafeMonologueIntervalMillisec):
    """This method is deprecated. Please switch to AddCafeMonologueIntervalMillisec."""
    return AddCafeMonologueIntervalMillisec(builder, CafeMonologueIntervalMillisec)
def AddCafeMonologueDefaultDuration(builder, CafeMonologueDefaultDuration): builder.PrependInt64Slot(10, CafeMonologueDefaultDuration, 0)
def ConstCommonExcelAddCafeMonologueDefaultDuration(builder, CafeMonologueDefaultDuration):
    """This method is deprecated. Please switch to AddCafeMonologueDefaultDuration."""
    return AddCafeMonologueDefaultDuration(builder, CafeMonologueDefaultDuration)
def AddCafeBubbleIdleDurationMilliSec(builder, CafeBubbleIdleDurationMilliSec): builder.PrependInt64Slot(11, CafeBubbleIdleDurationMilliSec, 0)
def ConstCommonExcelAddCafeBubbleIdleDurationMilliSec(builder, CafeBubbleIdleDurationMilliSec):
    """This method is deprecated. Please switch to AddCafeBubbleIdleDurationMilliSec."""
    return AddCafeBubbleIdleDurationMilliSec(builder, CafeBubbleIdleDurationMilliSec)
def AddFindGiftTimeLimit(builder, FindGiftTimeLimit): builder.PrependInt32Slot(12, FindGiftTimeLimit, 0)
def ConstCommonExcelAddFindGiftTimeLimit(builder, FindGiftTimeLimit):
    """This method is deprecated. Please switch to AddFindGiftTimeLimit."""
    return AddFindGiftTimeLimit(builder, FindGiftTimeLimit)
def AddCafeAutoChargePeriodInMsc(builder, CafeAutoChargePeriodInMsc): builder.PrependInt32Slot(13, CafeAutoChargePeriodInMsc, 0)
def ConstCommonExcelAddCafeAutoChargePeriodInMsc(builder, CafeAutoChargePeriodInMsc):
    """This method is deprecated. Please switch to AddCafeAutoChargePeriodInMsc."""
    return AddCafeAutoChargePeriodInMsc(builder, CafeAutoChargePeriodInMsc)
def AddCafeProductionDecimalPosition(builder, CafeProductionDecimalPosition): builder.PrependInt32Slot(14, CafeProductionDecimalPosition, 0)
def ConstCommonExcelAddCafeProductionDecimalPosition(builder, CafeProductionDecimalPosition):
    """This method is deprecated. Please switch to AddCafeProductionDecimalPosition."""
    return AddCafeProductionDecimalPosition(builder, CafeProductionDecimalPosition)
def AddCafeSetGroupApplyCount(builder, CafeSetGroupApplyCount): builder.PrependInt32Slot(15, CafeSetGroupApplyCount, 0)
def ConstCommonExcelAddCafeSetGroupApplyCount(builder, CafeSetGroupApplyCount):
    """This method is deprecated. Please switch to AddCafeSetGroupApplyCount."""
    return AddCafeSetGroupApplyCount(builder, CafeSetGroupApplyCount)
def AddWeekDungeonFindGiftRewardLimitCount(builder, WeekDungeonFindGiftRewardLimitCount): builder.PrependInt32Slot(16, WeekDungeonFindGiftRewardLimitCount, 0)
def ConstCommonExcelAddWeekDungeonFindGiftRewardLimitCount(builder, WeekDungeonFindGiftRewardLimitCount):
    """This method is deprecated. Please switch to AddWeekDungeonFindGiftRewardLimitCount."""
    return AddWeekDungeonFindGiftRewardLimitCount(builder, WeekDungeonFindGiftRewardLimitCount)
def AddStageFailedCurrencyRefundRate(builder, StageFailedCurrencyRefundRate): builder.PrependInt32Slot(17, StageFailedCurrencyRefundRate, 0)
def ConstCommonExcelAddStageFailedCurrencyRefundRate(builder, StageFailedCurrencyRefundRate):
    """This method is deprecated. Please switch to AddStageFailedCurrencyRefundRate."""
    return AddStageFailedCurrencyRefundRate(builder, StageFailedCurrencyRefundRate)
def AddEnterDeposit(builder, EnterDeposit): builder.PrependInt32Slot(18, EnterDeposit, 0)
def ConstCommonExcelAddEnterDeposit(builder, EnterDeposit):
    """This method is deprecated. Please switch to AddEnterDeposit."""
    return AddEnterDeposit(builder, EnterDeposit)
def AddAccountMaxLevel(builder, AccountMaxLevel): builder.PrependInt32Slot(19, AccountMaxLevel, 0)
def ConstCommonExcelAddAccountMaxLevel(builder, AccountMaxLevel):
    """This method is deprecated. Please switch to AddAccountMaxLevel."""
    return AddAccountMaxLevel(builder, AccountMaxLevel)
def AddMainSquadExpBonus(builder, MainSquadExpBonus): builder.PrependInt32Slot(20, MainSquadExpBonus, 0)
def ConstCommonExcelAddMainSquadExpBonus(builder, MainSquadExpBonus):
    """This method is deprecated. Please switch to AddMainSquadExpBonus."""
    return AddMainSquadExpBonus(builder, MainSquadExpBonus)
def AddSupportSquadExpBonus(builder, SupportSquadExpBonus): builder.PrependInt32Slot(21, SupportSquadExpBonus, 0)
def ConstCommonExcelAddSupportSquadExpBonus(builder, SupportSquadExpBonus):
    """This method is deprecated. Please switch to AddSupportSquadExpBonus."""
    return AddSupportSquadExpBonus(builder, SupportSquadExpBonus)
def AddAccountExpRatio(builder, AccountExpRatio): builder.PrependInt32Slot(22, AccountExpRatio, 0)
def ConstCommonExcelAddAccountExpRatio(builder, AccountExpRatio):
    """This method is deprecated. Please switch to AddAccountExpRatio."""
    return AddAccountExpRatio(builder, AccountExpRatio)
def AddMissionToastLifeTime(builder, MissionToastLifeTime): builder.PrependInt32Slot(23, MissionToastLifeTime, 0)
def ConstCommonExcelAddMissionToastLifeTime(builder, MissionToastLifeTime):
    """This method is deprecated. Please switch to AddMissionToastLifeTime."""
    return AddMissionToastLifeTime(builder, MissionToastLifeTime)
def AddExpItemInsertLimit(builder, ExpItemInsertLimit): builder.PrependInt32Slot(24, ExpItemInsertLimit, 0)
def ConstCommonExcelAddExpItemInsertLimit(builder, ExpItemInsertLimit):
    """This method is deprecated. Please switch to AddExpItemInsertLimit."""
    return AddExpItemInsertLimit(builder, ExpItemInsertLimit)
def AddExpItemInsertAccelTime(builder, ExpItemInsertAccelTime): builder.PrependInt32Slot(25, ExpItemInsertAccelTime, 0)
def ConstCommonExcelAddExpItemInsertAccelTime(builder, ExpItemInsertAccelTime):
    """This method is deprecated. Please switch to AddExpItemInsertAccelTime."""
    return AddExpItemInsertAccelTime(builder, ExpItemInsertAccelTime)
def AddCharacterLvUpCoefficient(builder, CharacterLvUpCoefficient): builder.PrependInt32Slot(26, CharacterLvUpCoefficient, 0)
def ConstCommonExcelAddCharacterLvUpCoefficient(builder, CharacterLvUpCoefficient):
    """This method is deprecated. Please switch to AddCharacterLvUpCoefficient."""
    return AddCharacterLvUpCoefficient(builder, CharacterLvUpCoefficient)
def AddEquipmentLvUpCoefficient(builder, EquipmentLvUpCoefficient): builder.PrependInt32Slot(27, EquipmentLvUpCoefficient, 0)
def ConstCommonExcelAddEquipmentLvUpCoefficient(builder, EquipmentLvUpCoefficient):
    """This method is deprecated. Please switch to AddEquipmentLvUpCoefficient."""
    return AddEquipmentLvUpCoefficient(builder, EquipmentLvUpCoefficient)
def AddExpEquipInsertLimit(builder, ExpEquipInsertLimit): builder.PrependInt32Slot(28, ExpEquipInsertLimit, 0)
def ConstCommonExcelAddExpEquipInsertLimit(builder, ExpEquipInsertLimit):
    """This method is deprecated. Please switch to AddExpEquipInsertLimit."""
    return AddExpEquipInsertLimit(builder, ExpEquipInsertLimit)
def AddEquipLvUpCoefficient(builder, EquipLvUpCoefficient): builder.PrependInt32Slot(29, EquipLvUpCoefficient, 0)
def ConstCommonExcelAddEquipLvUpCoefficient(builder, EquipLvUpCoefficient):
    """This method is deprecated. Please switch to AddEquipLvUpCoefficient."""
    return AddEquipLvUpCoefficient(builder, EquipLvUpCoefficient)
def AddNicknameLength(builder, NicknameLength): builder.PrependInt32Slot(30, NicknameLength, 0)
def ConstCommonExcelAddNicknameLength(builder, NicknameLength):
    """This method is deprecated. Please switch to AddNicknameLength."""
    return AddNicknameLength(builder, NicknameLength)
def AddCraftDuration(builder, CraftDuration): builder.PrependUOffsetTRelativeSlot(31, flatbuffers.number_types.UOffsetTFlags.py_type(CraftDuration), 0)
def ConstCommonExcelAddCraftDuration(builder, CraftDuration):
    """This method is deprecated. Please switch to AddCraftDuration."""
    return AddCraftDuration(builder, CraftDuration)
def StartCraftDurationVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConstCommonExcelStartCraftDurationVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCraftDurationVector(builder, numElems)
def AddCraftLimitTime(builder, CraftLimitTime): builder.PrependInt32Slot(32, CraftLimitTime, 0)
def ConstCommonExcelAddCraftLimitTime(builder, CraftLimitTime):
    """This method is deprecated. Please switch to AddCraftLimitTime."""
    return AddCraftLimitTime(builder, CraftLimitTime)
def AddShiftingCraftDuration(builder, ShiftingCraftDuration): builder.PrependUOffsetTRelativeSlot(33, flatbuffers.number_types.UOffsetTFlags.py_type(ShiftingCraftDuration), 0)
def ConstCommonExcelAddShiftingCraftDuration(builder, ShiftingCraftDuration):
    """This method is deprecated. Please switch to AddShiftingCraftDuration."""
    return AddShiftingCraftDuration(builder, ShiftingCraftDuration)
def StartShiftingCraftDurationVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConstCommonExcelStartShiftingCraftDurationVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartShiftingCraftDurationVector(builder, numElems)
def AddShiftingCraftTicketConsumeAmount(builder, ShiftingCraftTicketConsumeAmount): builder.PrependInt32Slot(34, ShiftingCraftTicketConsumeAmount, 0)
def ConstCommonExcelAddShiftingCraftTicketConsumeAmount(builder, ShiftingCraftTicketConsumeAmount):
    """This method is deprecated. Please switch to AddShiftingCraftTicketConsumeAmount."""
    return AddShiftingCraftTicketConsumeAmount(builder, ShiftingCraftTicketConsumeAmount)
def AddShiftingCraftSlotMaxCapacity(builder, ShiftingCraftSlotMaxCapacity): builder.PrependInt32Slot(35, ShiftingCraftSlotMaxCapacity, 0)
def ConstCommonExcelAddShiftingCraftSlotMaxCapacity(builder, ShiftingCraftSlotMaxCapacity):
    """This method is deprecated. Please switch to AddShiftingCraftSlotMaxCapacity."""
    return AddShiftingCraftSlotMaxCapacity(builder, ShiftingCraftSlotMaxCapacity)
def AddCraftTicketItemUniqueId(builder, CraftTicketItemUniqueId): builder.PrependInt32Slot(36, CraftTicketItemUniqueId, 0)
def ConstCommonExcelAddCraftTicketItemUniqueId(builder, CraftTicketItemUniqueId):
    """This method is deprecated. Please switch to AddCraftTicketItemUniqueId."""
    return AddCraftTicketItemUniqueId(builder, CraftTicketItemUniqueId)
def AddCraftTicketConsumeAmount(builder, CraftTicketConsumeAmount): builder.PrependInt32Slot(37, CraftTicketConsumeAmount, 0)
def ConstCommonExcelAddCraftTicketConsumeAmount(builder, CraftTicketConsumeAmount):
    """This method is deprecated. Please switch to AddCraftTicketConsumeAmount."""
    return AddCraftTicketConsumeAmount(builder, CraftTicketConsumeAmount)
def AddAcademyEnterCostType(builder, AcademyEnterCostType): builder.PrependInt32Slot(38, AcademyEnterCostType, 0)
def ConstCommonExcelAddAcademyEnterCostType(builder, AcademyEnterCostType):
    """This method is deprecated. Please switch to AddAcademyEnterCostType."""
    return AddAcademyEnterCostType(builder, AcademyEnterCostType)
def AddAcademyEnterCostId(builder, AcademyEnterCostId): builder.PrependInt64Slot(39, AcademyEnterCostId, 0)
def ConstCommonExcelAddAcademyEnterCostId(builder, AcademyEnterCostId):
    """This method is deprecated. Please switch to AddAcademyEnterCostId."""
    return AddAcademyEnterCostId(builder, AcademyEnterCostId)
def AddAcademyTicketCost(builder, AcademyTicketCost): builder.PrependInt32Slot(40, AcademyTicketCost, 0)
def ConstCommonExcelAddAcademyTicketCost(builder, AcademyTicketCost):
    """This method is deprecated. Please switch to AddAcademyTicketCost."""
    return AddAcademyTicketCost(builder, AcademyTicketCost)
def AddMassangerMessageExpireDay(builder, MassangerMessageExpireDay): builder.PrependInt32Slot(41, MassangerMessageExpireDay, 0)
def ConstCommonExcelAddMassangerMessageExpireDay(builder, MassangerMessageExpireDay):
    """This method is deprecated. Please switch to AddMassangerMessageExpireDay."""
    return AddMassangerMessageExpireDay(builder, MassangerMessageExpireDay)
def AddCraftLeafNodeGenerateLv1Count(builder, CraftLeafNodeGenerateLv1Count): builder.PrependInt32Slot(42, CraftLeafNodeGenerateLv1Count, 0)
def ConstCommonExcelAddCraftLeafNodeGenerateLv1Count(builder, CraftLeafNodeGenerateLv1Count):
    """This method is deprecated. Please switch to AddCraftLeafNodeGenerateLv1Count."""
    return AddCraftLeafNodeGenerateLv1Count(builder, CraftLeafNodeGenerateLv1Count)
def AddCraftLeafNodeGenerateLv2Count(builder, CraftLeafNodeGenerateLv2Count): builder.PrependInt32Slot(43, CraftLeafNodeGenerateLv2Count, 0)
def ConstCommonExcelAddCraftLeafNodeGenerateLv2Count(builder, CraftLeafNodeGenerateLv2Count):
    """This method is deprecated. Please switch to AddCraftLeafNodeGenerateLv2Count."""
    return AddCraftLeafNodeGenerateLv2Count(builder, CraftLeafNodeGenerateLv2Count)
def AddTutorialGachaShopId(builder, TutorialGachaShopId): builder.PrependInt32Slot(44, TutorialGachaShopId, 0)
def ConstCommonExcelAddTutorialGachaShopId(builder, TutorialGachaShopId):
    """This method is deprecated. Please switch to AddTutorialGachaShopId."""
    return AddTutorialGachaShopId(builder, TutorialGachaShopId)
def AddBeforehandGachaShopId(builder, BeforehandGachaShopId): builder.PrependInt32Slot(45, BeforehandGachaShopId, 0)
def ConstCommonExcelAddBeforehandGachaShopId(builder, BeforehandGachaShopId):
    """This method is deprecated. Please switch to AddBeforehandGachaShopId."""
    return AddBeforehandGachaShopId(builder, BeforehandGachaShopId)
def AddTutorialGachaGoodsId(builder, TutorialGachaGoodsId): builder.PrependInt32Slot(46, TutorialGachaGoodsId, 0)
def ConstCommonExcelAddTutorialGachaGoodsId(builder, TutorialGachaGoodsId):
    """This method is deprecated. Please switch to AddTutorialGachaGoodsId."""
    return AddTutorialGachaGoodsId(builder, TutorialGachaGoodsId)
def AddEquipmentSlotOpenLevel(builder, EquipmentSlotOpenLevel): builder.PrependUOffsetTRelativeSlot(47, flatbuffers.number_types.UOffsetTFlags.py_type(EquipmentSlotOpenLevel), 0)
def ConstCommonExcelAddEquipmentSlotOpenLevel(builder, EquipmentSlotOpenLevel):
    """This method is deprecated. Please switch to AddEquipmentSlotOpenLevel."""
    return AddEquipmentSlotOpenLevel(builder, EquipmentSlotOpenLevel)
def StartEquipmentSlotOpenLevelVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConstCommonExcelStartEquipmentSlotOpenLevelVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartEquipmentSlotOpenLevelVector(builder, numElems)
def AddScenarioAutoDelayMillisec(builder, ScenarioAutoDelayMillisec): builder.PrependFloat32Slot(48, ScenarioAutoDelayMillisec, 0.0)
def ConstCommonExcelAddScenarioAutoDelayMillisec(builder, ScenarioAutoDelayMillisec):
    """This method is deprecated. Please switch to AddScenarioAutoDelayMillisec."""
    return AddScenarioAutoDelayMillisec(builder, ScenarioAutoDelayMillisec)
def AddJoinOrCreateClanCoolTimeFromHour(builder, JoinOrCreateClanCoolTimeFromHour): builder.PrependInt64Slot(49, JoinOrCreateClanCoolTimeFromHour, 0)
def ConstCommonExcelAddJoinOrCreateClanCoolTimeFromHour(builder, JoinOrCreateClanCoolTimeFromHour):
    """This method is deprecated. Please switch to AddJoinOrCreateClanCoolTimeFromHour."""
    return AddJoinOrCreateClanCoolTimeFromHour(builder, JoinOrCreateClanCoolTimeFromHour)
def AddClanMaxMember(builder, ClanMaxMember): builder.PrependInt64Slot(50, ClanMaxMember, 0)
def ConstCommonExcelAddClanMaxMember(builder, ClanMaxMember):
    """This method is deprecated. Please switch to AddClanMaxMember."""
    return AddClanMaxMember(builder, ClanMaxMember)
def AddClanSearchResultCount(builder, ClanSearchResultCount): builder.PrependInt64Slot(51, ClanSearchResultCount, 0)
def ConstCommonExcelAddClanSearchResultCount(builder, ClanSearchResultCount):
    """This method is deprecated. Please switch to AddClanSearchResultCount."""
    return AddClanSearchResultCount(builder, ClanSearchResultCount)
def AddClanMaxApplicant(builder, ClanMaxApplicant): builder.PrependInt64Slot(52, ClanMaxApplicant, 0)
def ConstCommonExcelAddClanMaxApplicant(builder, ClanMaxApplicant):
    """This method is deprecated. Please switch to AddClanMaxApplicant."""
    return AddClanMaxApplicant(builder, ClanMaxApplicant)
def AddClanRejoinCoolTimeFromSecond(builder, ClanRejoinCoolTimeFromSecond): builder.PrependInt64Slot(53, ClanRejoinCoolTimeFromSecond, 0)
def ConstCommonExcelAddClanRejoinCoolTimeFromSecond(builder, ClanRejoinCoolTimeFromSecond):
    """This method is deprecated. Please switch to AddClanRejoinCoolTimeFromSecond."""
    return AddClanRejoinCoolTimeFromSecond(builder, ClanRejoinCoolTimeFromSecond)
def AddClanWordBalloonMaxCharacter(builder, ClanWordBalloonMaxCharacter): builder.PrependInt32Slot(54, ClanWordBalloonMaxCharacter, 0)
def ConstCommonExcelAddClanWordBalloonMaxCharacter(builder, ClanWordBalloonMaxCharacter):
    """This method is deprecated. Please switch to AddClanWordBalloonMaxCharacter."""
    return AddClanWordBalloonMaxCharacter(builder, ClanWordBalloonMaxCharacter)
def AddCallNameRenameCoolTimeFromHour(builder, CallNameRenameCoolTimeFromHour): builder.PrependInt64Slot(55, CallNameRenameCoolTimeFromHour, 0)
def ConstCommonExcelAddCallNameRenameCoolTimeFromHour(builder, CallNameRenameCoolTimeFromHour):
    """This method is deprecated. Please switch to AddCallNameRenameCoolTimeFromHour."""
    return AddCallNameRenameCoolTimeFromHour(builder, CallNameRenameCoolTimeFromHour)
def AddCallNameMinimumLength(builder, CallNameMinimumLength): builder.PrependInt64Slot(56, CallNameMinimumLength, 0)
def ConstCommonExcelAddCallNameMinimumLength(builder, CallNameMinimumLength):
    """This method is deprecated. Please switch to AddCallNameMinimumLength."""
    return AddCallNameMinimumLength(builder, CallNameMinimumLength)
def AddCallNameMaximumLength(builder, CallNameMaximumLength): builder.PrependInt64Slot(57, CallNameMaximumLength, 0)
def ConstCommonExcelAddCallNameMaximumLength(builder, CallNameMaximumLength):
    """This method is deprecated. Please switch to AddCallNameMaximumLength."""
    return AddCallNameMaximumLength(builder, CallNameMaximumLength)
def AddLobbyToScreenModeWaitTime(builder, LobbyToScreenModeWaitTime): builder.PrependInt64Slot(58, LobbyToScreenModeWaitTime, 0)
def ConstCommonExcelAddLobbyToScreenModeWaitTime(builder, LobbyToScreenModeWaitTime):
    """This method is deprecated. Please switch to AddLobbyToScreenModeWaitTime."""
    return AddLobbyToScreenModeWaitTime(builder, LobbyToScreenModeWaitTime)
def AddScreenshotToLobbyButtonHideDelay(builder, ScreenshotToLobbyButtonHideDelay): builder.PrependInt64Slot(59, ScreenshotToLobbyButtonHideDelay, 0)
def ConstCommonExcelAddScreenshotToLobbyButtonHideDelay(builder, ScreenshotToLobbyButtonHideDelay):
    """This method is deprecated. Please switch to AddScreenshotToLobbyButtonHideDelay."""
    return AddScreenshotToLobbyButtonHideDelay(builder, ScreenshotToLobbyButtonHideDelay)
def AddPrologueScenarioID01(builder, PrologueScenarioID01): builder.PrependInt64Slot(60, PrologueScenarioID01, 0)
def ConstCommonExcelAddPrologueScenarioID01(builder, PrologueScenarioID01):
    """This method is deprecated. Please switch to AddPrologueScenarioID01."""
    return AddPrologueScenarioID01(builder, PrologueScenarioID01)
def AddPrologueScenarioID02(builder, PrologueScenarioID02): builder.PrependInt64Slot(61, PrologueScenarioID02, 0)
def ConstCommonExcelAddPrologueScenarioID02(builder, PrologueScenarioID02):
    """This method is deprecated. Please switch to AddPrologueScenarioID02."""
    return AddPrologueScenarioID02(builder, PrologueScenarioID02)
def AddTutorialHardStage11(builder, TutorialHardStage11): builder.PrependInt64Slot(62, TutorialHardStage11, 0)
def ConstCommonExcelAddTutorialHardStage11(builder, TutorialHardStage11):
    """This method is deprecated. Please switch to AddTutorialHardStage11."""
    return AddTutorialHardStage11(builder, TutorialHardStage11)
def AddTutorialSpeedButtonStage(builder, TutorialSpeedButtonStage): builder.PrependInt64Slot(63, TutorialSpeedButtonStage, 0)
def ConstCommonExcelAddTutorialSpeedButtonStage(builder, TutorialSpeedButtonStage):
    """This method is deprecated. Please switch to AddTutorialSpeedButtonStage."""
    return AddTutorialSpeedButtonStage(builder, TutorialSpeedButtonStage)
def AddTutorialCharacterDefaultCount(builder, TutorialCharacterDefaultCount): builder.PrependInt64Slot(64, TutorialCharacterDefaultCount, 0)
def ConstCommonExcelAddTutorialCharacterDefaultCount(builder, TutorialCharacterDefaultCount):
    """This method is deprecated. Please switch to AddTutorialCharacterDefaultCount."""
    return AddTutorialCharacterDefaultCount(builder, TutorialCharacterDefaultCount)
def AddTutorialShopCategoryType(builder, TutorialShopCategoryType): builder.PrependInt32Slot(65, TutorialShopCategoryType, 0)
def ConstCommonExcelAddTutorialShopCategoryType(builder, TutorialShopCategoryType):
    """This method is deprecated. Please switch to AddTutorialShopCategoryType."""
    return AddTutorialShopCategoryType(builder, TutorialShopCategoryType)
def AddAdventureStrategyPlayTimeLimitInSeconds(builder, AdventureStrategyPlayTimeLimitInSeconds): builder.PrependInt64Slot(66, AdventureStrategyPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddAdventureStrategyPlayTimeLimitInSeconds(builder, AdventureStrategyPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddAdventureStrategyPlayTimeLimitInSeconds."""
    return AddAdventureStrategyPlayTimeLimitInSeconds(builder, AdventureStrategyPlayTimeLimitInSeconds)
def AddWeekDungoenTacticPlayTimeLimitInSeconds(builder, WeekDungoenTacticPlayTimeLimitInSeconds): builder.PrependInt64Slot(67, WeekDungoenTacticPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddWeekDungoenTacticPlayTimeLimitInSeconds(builder, WeekDungoenTacticPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddWeekDungoenTacticPlayTimeLimitInSeconds."""
    return AddWeekDungoenTacticPlayTimeLimitInSeconds(builder, WeekDungoenTacticPlayTimeLimitInSeconds)
def AddRaidTacticPlayTimeLimitInSeconds(builder, RaidTacticPlayTimeLimitInSeconds): builder.PrependInt64Slot(68, RaidTacticPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddRaidTacticPlayTimeLimitInSeconds(builder, RaidTacticPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddRaidTacticPlayTimeLimitInSeconds."""
    return AddRaidTacticPlayTimeLimitInSeconds(builder, RaidTacticPlayTimeLimitInSeconds)
def AddRaidOpponentListAmount(builder, RaidOpponentListAmount): builder.PrependInt64Slot(69, RaidOpponentListAmount, 0)
def ConstCommonExcelAddRaidOpponentListAmount(builder, RaidOpponentListAmount):
    """This method is deprecated. Please switch to AddRaidOpponentListAmount."""
    return AddRaidOpponentListAmount(builder, RaidOpponentListAmount)
def AddCraftBaseGoldRequired(builder, CraftBaseGoldRequired): builder.PrependUOffsetTRelativeSlot(70, flatbuffers.number_types.UOffsetTFlags.py_type(CraftBaseGoldRequired), 0)
def ConstCommonExcelAddCraftBaseGoldRequired(builder, CraftBaseGoldRequired):
    """This method is deprecated. Please switch to AddCraftBaseGoldRequired."""
    return AddCraftBaseGoldRequired(builder, CraftBaseGoldRequired)
def StartCraftBaseGoldRequiredVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def ConstCommonExcelStartCraftBaseGoldRequiredVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCraftBaseGoldRequiredVector(builder, numElems)
def AddPostExpiredDayAttendance(builder, PostExpiredDayAttendance): builder.PrependInt32Slot(71, PostExpiredDayAttendance, 0)
def ConstCommonExcelAddPostExpiredDayAttendance(builder, PostExpiredDayAttendance):
    """This method is deprecated. Please switch to AddPostExpiredDayAttendance."""
    return AddPostExpiredDayAttendance(builder, PostExpiredDayAttendance)
def AddPostExpiredDayInventoryOverflow(builder, PostExpiredDayInventoryOverflow): builder.PrependInt32Slot(72, PostExpiredDayInventoryOverflow, 0)
def ConstCommonExcelAddPostExpiredDayInventoryOverflow(builder, PostExpiredDayInventoryOverflow):
    """This method is deprecated. Please switch to AddPostExpiredDayInventoryOverflow."""
    return AddPostExpiredDayInventoryOverflow(builder, PostExpiredDayInventoryOverflow)
def AddPostExpiredDayGameManager(builder, PostExpiredDayGameManager): builder.PrependInt32Slot(73, PostExpiredDayGameManager, 0)
def ConstCommonExcelAddPostExpiredDayGameManager(builder, PostExpiredDayGameManager):
    """This method is deprecated. Please switch to AddPostExpiredDayGameManager."""
    return AddPostExpiredDayGameManager(builder, PostExpiredDayGameManager)
def AddUILabelCharacterWrap(builder, UILabelCharacterWrap): builder.PrependUOffsetTRelativeSlot(74, flatbuffers.number_types.UOffsetTFlags.py_type(UILabelCharacterWrap), 0)
def ConstCommonExcelAddUILabelCharacterWrap(builder, UILabelCharacterWrap):
    """This method is deprecated. Please switch to AddUILabelCharacterWrap."""
    return AddUILabelCharacterWrap(builder, UILabelCharacterWrap)
def AddRequestTimeOut(builder, RequestTimeOut): builder.PrependFloat32Slot(75, RequestTimeOut, 0.0)
def ConstCommonExcelAddRequestTimeOut(builder, RequestTimeOut):
    """This method is deprecated. Please switch to AddRequestTimeOut."""
    return AddRequestTimeOut(builder, RequestTimeOut)
def AddMailStorageSoftCap(builder, MailStorageSoftCap): builder.PrependInt32Slot(76, MailStorageSoftCap, 0)
def ConstCommonExcelAddMailStorageSoftCap(builder, MailStorageSoftCap):
    """This method is deprecated. Please switch to AddMailStorageSoftCap."""
    return AddMailStorageSoftCap(builder, MailStorageSoftCap)
def AddMailStorageHardCap(builder, MailStorageHardCap): builder.PrependInt32Slot(77, MailStorageHardCap, 0)
def ConstCommonExcelAddMailStorageHardCap(builder, MailStorageHardCap):
    """This method is deprecated. Please switch to AddMailStorageHardCap."""
    return AddMailStorageHardCap(builder, MailStorageHardCap)
def AddClearDeckStorageSize(builder, ClearDeckStorageSize): builder.PrependInt32Slot(78, ClearDeckStorageSize, 0)
def ConstCommonExcelAddClearDeckStorageSize(builder, ClearDeckStorageSize):
    """This method is deprecated. Please switch to AddClearDeckStorageSize."""
    return AddClearDeckStorageSize(builder, ClearDeckStorageSize)
def AddClearDeckNoStarViewCount(builder, ClearDeckNoStarViewCount): builder.PrependInt32Slot(79, ClearDeckNoStarViewCount, 0)
def ConstCommonExcelAddClearDeckNoStarViewCount(builder, ClearDeckNoStarViewCount):
    """This method is deprecated. Please switch to AddClearDeckNoStarViewCount."""
    return AddClearDeckNoStarViewCount(builder, ClearDeckNoStarViewCount)
def AddClearDeck1StarViewCount(builder, ClearDeck1StarViewCount): builder.PrependInt32Slot(80, ClearDeck1StarViewCount, 0)
def ConstCommonExcelAddClearDeck1StarViewCount(builder, ClearDeck1StarViewCount):
    """This method is deprecated. Please switch to AddClearDeck1StarViewCount."""
    return AddClearDeck1StarViewCount(builder, ClearDeck1StarViewCount)
def AddClearDeck2StarViewCount(builder, ClearDeck2StarViewCount): builder.PrependInt32Slot(81, ClearDeck2StarViewCount, 0)
def ConstCommonExcelAddClearDeck2StarViewCount(builder, ClearDeck2StarViewCount):
    """This method is deprecated. Please switch to AddClearDeck2StarViewCount."""
    return AddClearDeck2StarViewCount(builder, ClearDeck2StarViewCount)
def AddClearDeck3StarViewCount(builder, ClearDeck3StarViewCount): builder.PrependInt32Slot(82, ClearDeck3StarViewCount, 0)
def ConstCommonExcelAddClearDeck3StarViewCount(builder, ClearDeck3StarViewCount):
    """This method is deprecated. Please switch to AddClearDeck3StarViewCount."""
    return AddClearDeck3StarViewCount(builder, ClearDeck3StarViewCount)
def AddExSkillLevelMax(builder, ExSkillLevelMax): builder.PrependInt32Slot(83, ExSkillLevelMax, 0)
def ConstCommonExcelAddExSkillLevelMax(builder, ExSkillLevelMax):
    """This method is deprecated. Please switch to AddExSkillLevelMax."""
    return AddExSkillLevelMax(builder, ExSkillLevelMax)
def AddPublicSkillLevelMax(builder, PublicSkillLevelMax): builder.PrependInt32Slot(84, PublicSkillLevelMax, 0)
def ConstCommonExcelAddPublicSkillLevelMax(builder, PublicSkillLevelMax):
    """This method is deprecated. Please switch to AddPublicSkillLevelMax."""
    return AddPublicSkillLevelMax(builder, PublicSkillLevelMax)
def AddPassiveSkillLevelMax(builder, PassiveSkillLevelMax): builder.PrependInt32Slot(85, PassiveSkillLevelMax, 0)
def ConstCommonExcelAddPassiveSkillLevelMax(builder, PassiveSkillLevelMax):
    """This method is deprecated. Please switch to AddPassiveSkillLevelMax."""
    return AddPassiveSkillLevelMax(builder, PassiveSkillLevelMax)
def AddExtraPassiveSkillLevelMax(builder, ExtraPassiveSkillLevelMax): builder.PrependInt32Slot(86, ExtraPassiveSkillLevelMax, 0)
def ConstCommonExcelAddExtraPassiveSkillLevelMax(builder, ExtraPassiveSkillLevelMax):
    """This method is deprecated. Please switch to AddExtraPassiveSkillLevelMax."""
    return AddExtraPassiveSkillLevelMax(builder, ExtraPassiveSkillLevelMax)
def AddAccountCommentMaxLength(builder, AccountCommentMaxLength): builder.PrependInt32Slot(87, AccountCommentMaxLength, 0)
def ConstCommonExcelAddAccountCommentMaxLength(builder, AccountCommentMaxLength):
    """This method is deprecated. Please switch to AddAccountCommentMaxLength."""
    return AddAccountCommentMaxLength(builder, AccountCommentMaxLength)
def AddCafeSummonCoolTimeFromHour(builder, CafeSummonCoolTimeFromHour): builder.PrependInt32Slot(88, CafeSummonCoolTimeFromHour, 0)
def ConstCommonExcelAddCafeSummonCoolTimeFromHour(builder, CafeSummonCoolTimeFromHour):
    """This method is deprecated. Please switch to AddCafeSummonCoolTimeFromHour."""
    return AddCafeSummonCoolTimeFromHour(builder, CafeSummonCoolTimeFromHour)
def AddLimitedStageDailyClearCount(builder, LimitedStageDailyClearCount): builder.PrependInt64Slot(89, LimitedStageDailyClearCount, 0)
def ConstCommonExcelAddLimitedStageDailyClearCount(builder, LimitedStageDailyClearCount):
    """This method is deprecated. Please switch to AddLimitedStageDailyClearCount."""
    return AddLimitedStageDailyClearCount(builder, LimitedStageDailyClearCount)
def AddLimitedStageEntryTimeLimit(builder, LimitedStageEntryTimeLimit): builder.PrependInt64Slot(90, LimitedStageEntryTimeLimit, 0)
def ConstCommonExcelAddLimitedStageEntryTimeLimit(builder, LimitedStageEntryTimeLimit):
    """This method is deprecated. Please switch to AddLimitedStageEntryTimeLimit."""
    return AddLimitedStageEntryTimeLimit(builder, LimitedStageEntryTimeLimit)
def AddLimitedStageEntryTimeBuffer(builder, LimitedStageEntryTimeBuffer): builder.PrependInt64Slot(91, LimitedStageEntryTimeBuffer, 0)
def ConstCommonExcelAddLimitedStageEntryTimeBuffer(builder, LimitedStageEntryTimeBuffer):
    """This method is deprecated. Please switch to AddLimitedStageEntryTimeBuffer."""
    return AddLimitedStageEntryTimeBuffer(builder, LimitedStageEntryTimeBuffer)
def AddLimitedStagePointAmount(builder, LimitedStagePointAmount): builder.PrependInt64Slot(92, LimitedStagePointAmount, 0)
def ConstCommonExcelAddLimitedStagePointAmount(builder, LimitedStagePointAmount):
    """This method is deprecated. Please switch to AddLimitedStagePointAmount."""
    return AddLimitedStagePointAmount(builder, LimitedStagePointAmount)
def AddLimitedStagePointPerApMin(builder, LimitedStagePointPerApMin): builder.PrependInt64Slot(93, LimitedStagePointPerApMin, 0)
def ConstCommonExcelAddLimitedStagePointPerApMin(builder, LimitedStagePointPerApMin):
    """This method is deprecated. Please switch to AddLimitedStagePointPerApMin."""
    return AddLimitedStagePointPerApMin(builder, LimitedStagePointPerApMin)
def AddLimitedStagePointPerApMax(builder, LimitedStagePointPerApMax): builder.PrependInt64Slot(94, LimitedStagePointPerApMax, 0)
def ConstCommonExcelAddLimitedStagePointPerApMax(builder, LimitedStagePointPerApMax):
    """This method is deprecated. Please switch to AddLimitedStagePointPerApMax."""
    return AddLimitedStagePointPerApMax(builder, LimitedStagePointPerApMax)
def AddAccountLinkReward(builder, AccountLinkReward): builder.PrependInt32Slot(95, AccountLinkReward, 0)
def ConstCommonExcelAddAccountLinkReward(builder, AccountLinkReward):
    """This method is deprecated. Please switch to AddAccountLinkReward."""
    return AddAccountLinkReward(builder, AccountLinkReward)
def AddMonthlyProductCheckDays(builder, MonthlyProductCheckDays): builder.PrependInt32Slot(96, MonthlyProductCheckDays, 0)
def ConstCommonExcelAddMonthlyProductCheckDays(builder, MonthlyProductCheckDays):
    """This method is deprecated. Please switch to AddMonthlyProductCheckDays."""
    return AddMonthlyProductCheckDays(builder, MonthlyProductCheckDays)
def AddWeaponLvUpCoefficient(builder, WeaponLvUpCoefficient): builder.PrependInt32Slot(97, WeaponLvUpCoefficient, 0)
def ConstCommonExcelAddWeaponLvUpCoefficient(builder, WeaponLvUpCoefficient):
    """This method is deprecated. Please switch to AddWeaponLvUpCoefficient."""
    return AddWeaponLvUpCoefficient(builder, WeaponLvUpCoefficient)
def AddShowRaidMyListCount(builder, ShowRaidMyListCount): builder.PrependInt32Slot(98, ShowRaidMyListCount, 0)
def ConstCommonExcelAddShowRaidMyListCount(builder, ShowRaidMyListCount):
    """This method is deprecated. Please switch to AddShowRaidMyListCount."""
    return AddShowRaidMyListCount(builder, ShowRaidMyListCount)
def AddMaxLevelExpMasterCoinRatio(builder, MaxLevelExpMasterCoinRatio): builder.PrependInt32Slot(99, MaxLevelExpMasterCoinRatio, 0)
def ConstCommonExcelAddMaxLevelExpMasterCoinRatio(builder, MaxLevelExpMasterCoinRatio):
    """This method is deprecated. Please switch to AddMaxLevelExpMasterCoinRatio."""
    return AddMaxLevelExpMasterCoinRatio(builder, MaxLevelExpMasterCoinRatio)
def AddRaidEnterCostType(builder, RaidEnterCostType): builder.PrependInt32Slot(100, RaidEnterCostType, 0)
def ConstCommonExcelAddRaidEnterCostType(builder, RaidEnterCostType):
    """This method is deprecated. Please switch to AddRaidEnterCostType."""
    return AddRaidEnterCostType(builder, RaidEnterCostType)
def AddRaidEnterCostId(builder, RaidEnterCostId): builder.PrependInt64Slot(101, RaidEnterCostId, 0)
def ConstCommonExcelAddRaidEnterCostId(builder, RaidEnterCostId):
    """This method is deprecated. Please switch to AddRaidEnterCostId."""
    return AddRaidEnterCostId(builder, RaidEnterCostId)
def AddRaidTicketCost(builder, RaidTicketCost): builder.PrependInt64Slot(102, RaidTicketCost, 0)
def ConstCommonExcelAddRaidTicketCost(builder, RaidTicketCost):
    """This method is deprecated. Please switch to AddRaidTicketCost."""
    return AddRaidTicketCost(builder, RaidTicketCost)
def AddTimeAttackDungeonScenarioId(builder, TimeAttackDungeonScenarioId): builder.PrependUOffsetTRelativeSlot(103, flatbuffers.number_types.UOffsetTFlags.py_type(TimeAttackDungeonScenarioId), 0)
def ConstCommonExcelAddTimeAttackDungeonScenarioId(builder, TimeAttackDungeonScenarioId):
    """This method is deprecated. Please switch to AddTimeAttackDungeonScenarioId."""
    return AddTimeAttackDungeonScenarioId(builder, TimeAttackDungeonScenarioId)
def AddTimeAttackDungoenPlayCountPerTicket(builder, TimeAttackDungoenPlayCountPerTicket): builder.PrependInt32Slot(104, TimeAttackDungoenPlayCountPerTicket, 0)
def ConstCommonExcelAddTimeAttackDungoenPlayCountPerTicket(builder, TimeAttackDungoenPlayCountPerTicket):
    """This method is deprecated. Please switch to AddTimeAttackDungoenPlayCountPerTicket."""
    return AddTimeAttackDungoenPlayCountPerTicket(builder, TimeAttackDungoenPlayCountPerTicket)
def AddTimeAttackDungeonEnterCostType(builder, TimeAttackDungeonEnterCostType): builder.PrependInt32Slot(105, TimeAttackDungeonEnterCostType, 0)
def ConstCommonExcelAddTimeAttackDungeonEnterCostType(builder, TimeAttackDungeonEnterCostType):
    """This method is deprecated. Please switch to AddTimeAttackDungeonEnterCostType."""
    return AddTimeAttackDungeonEnterCostType(builder, TimeAttackDungeonEnterCostType)
def AddTimeAttackDungeonEnterCostId(builder, TimeAttackDungeonEnterCostId): builder.PrependInt64Slot(106, TimeAttackDungeonEnterCostId, 0)
def ConstCommonExcelAddTimeAttackDungeonEnterCostId(builder, TimeAttackDungeonEnterCostId):
    """This method is deprecated. Please switch to AddTimeAttackDungeonEnterCostId."""
    return AddTimeAttackDungeonEnterCostId(builder, TimeAttackDungeonEnterCostId)
def AddTimeAttackDungeonEnterCost(builder, TimeAttackDungeonEnterCost): builder.PrependInt64Slot(107, TimeAttackDungeonEnterCost, 0)
def ConstCommonExcelAddTimeAttackDungeonEnterCost(builder, TimeAttackDungeonEnterCost):
    """This method is deprecated. Please switch to AddTimeAttackDungeonEnterCost."""
    return AddTimeAttackDungeonEnterCost(builder, TimeAttackDungeonEnterCost)
def AddClanLeaderTransferLastLoginLimit(builder, ClanLeaderTransferLastLoginLimit): builder.PrependInt64Slot(108, ClanLeaderTransferLastLoginLimit, 0)
def ConstCommonExcelAddClanLeaderTransferLastLoginLimit(builder, ClanLeaderTransferLastLoginLimit):
    """This method is deprecated. Please switch to AddClanLeaderTransferLastLoginLimit."""
    return AddClanLeaderTransferLastLoginLimit(builder, ClanLeaderTransferLastLoginLimit)
def AddMonthlyProductRepurchasePopupLimit(builder, MonthlyProductRepurchasePopupLimit): builder.PrependInt32Slot(109, MonthlyProductRepurchasePopupLimit, 0)
def ConstCommonExcelAddMonthlyProductRepurchasePopupLimit(builder, MonthlyProductRepurchasePopupLimit):
    """This method is deprecated. Please switch to AddMonthlyProductRepurchasePopupLimit."""
    return AddMonthlyProductRepurchasePopupLimit(builder, MonthlyProductRepurchasePopupLimit)
def AddCommonFavorItemTags(builder, CommonFavorItemTags): builder.PrependUOffsetTRelativeSlot(110, flatbuffers.number_types.UOffsetTFlags.py_type(CommonFavorItemTags), 0)
def ConstCommonExcelAddCommonFavorItemTags(builder, CommonFavorItemTags):
    """This method is deprecated. Please switch to AddCommonFavorItemTags."""
    return AddCommonFavorItemTags(builder, CommonFavorItemTags)
def StartCommonFavorItemTagsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConstCommonExcelStartCommonFavorItemTagsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCommonFavorItemTagsVector(builder, numElems)
def AddMaxApMasterCoinPerWeek(builder, MaxApMasterCoinPerWeek): builder.PrependInt64Slot(111, MaxApMasterCoinPerWeek, 0)
def ConstCommonExcelAddMaxApMasterCoinPerWeek(builder, MaxApMasterCoinPerWeek):
    """This method is deprecated. Please switch to AddMaxApMasterCoinPerWeek."""
    return AddMaxApMasterCoinPerWeek(builder, MaxApMasterCoinPerWeek)
def AddCraftOpenExpTier1(builder, CraftOpenExpTier1): builder.PrependInt64Slot(112, CraftOpenExpTier1, 0)
def ConstCommonExcelAddCraftOpenExpTier1(builder, CraftOpenExpTier1):
    """This method is deprecated. Please switch to AddCraftOpenExpTier1."""
    return AddCraftOpenExpTier1(builder, CraftOpenExpTier1)
def AddCraftOpenExpTier2(builder, CraftOpenExpTier2): builder.PrependInt64Slot(113, CraftOpenExpTier2, 0)
def ConstCommonExcelAddCraftOpenExpTier2(builder, CraftOpenExpTier2):
    """This method is deprecated. Please switch to AddCraftOpenExpTier2."""
    return AddCraftOpenExpTier2(builder, CraftOpenExpTier2)
def AddCraftOpenExpTier3(builder, CraftOpenExpTier3): builder.PrependInt64Slot(114, CraftOpenExpTier3, 0)
def ConstCommonExcelAddCraftOpenExpTier3(builder, CraftOpenExpTier3):
    """This method is deprecated. Please switch to AddCraftOpenExpTier3."""
    return AddCraftOpenExpTier3(builder, CraftOpenExpTier3)
def AddCharacterEquipmentGearSlot(builder, CharacterEquipmentGearSlot): builder.PrependInt64Slot(115, CharacterEquipmentGearSlot, 0)
def ConstCommonExcelAddCharacterEquipmentGearSlot(builder, CharacterEquipmentGearSlot):
    """This method is deprecated. Please switch to AddCharacterEquipmentGearSlot."""
    return AddCharacterEquipmentGearSlot(builder, CharacterEquipmentGearSlot)
def AddBirthDayDDay(builder, BirthDayDDay): builder.PrependInt32Slot(116, BirthDayDDay, 0)
def ConstCommonExcelAddBirthDayDDay(builder, BirthDayDDay):
    """This method is deprecated. Please switch to AddBirthDayDDay."""
    return AddBirthDayDDay(builder, BirthDayDDay)
def AddRecommendedFriendsLvDifferenceLimit(builder, RecommendedFriendsLvDifferenceLimit): builder.PrependInt32Slot(117, RecommendedFriendsLvDifferenceLimit, 0)
def ConstCommonExcelAddRecommendedFriendsLvDifferenceLimit(builder, RecommendedFriendsLvDifferenceLimit):
    """This method is deprecated. Please switch to AddRecommendedFriendsLvDifferenceLimit."""
    return AddRecommendedFriendsLvDifferenceLimit(builder, RecommendedFriendsLvDifferenceLimit)
def AddDDosDetectCount(builder, DDosDetectCount): builder.PrependInt32Slot(118, DDosDetectCount, 0)
def ConstCommonExcelAddDDosDetectCount(builder, DDosDetectCount):
    """This method is deprecated. Please switch to AddDDosDetectCount."""
    return AddDDosDetectCount(builder, DDosDetectCount)
def AddDDosCheckIntervalInSeconds(builder, DDosCheckIntervalInSeconds): builder.PrependInt32Slot(119, DDosCheckIntervalInSeconds, 0)
def ConstCommonExcelAddDDosCheckIntervalInSeconds(builder, DDosCheckIntervalInSeconds):
    """This method is deprecated. Please switch to AddDDosCheckIntervalInSeconds."""
    return AddDDosCheckIntervalInSeconds(builder, DDosCheckIntervalInSeconds)
def AddMaxFriendsCount(builder, MaxFriendsCount): builder.PrependInt32Slot(120, MaxFriendsCount, 0)
def ConstCommonExcelAddMaxFriendsCount(builder, MaxFriendsCount):
    """This method is deprecated. Please switch to AddMaxFriendsCount."""
    return AddMaxFriendsCount(builder, MaxFriendsCount)
def AddMaxFriendsRequest(builder, MaxFriendsRequest): builder.PrependInt32Slot(121, MaxFriendsRequest, 0)
def ConstCommonExcelAddMaxFriendsRequest(builder, MaxFriendsRequest):
    """This method is deprecated. Please switch to AddMaxFriendsRequest."""
    return AddMaxFriendsRequest(builder, MaxFriendsRequest)
def AddFriendsSearchRequestCount(builder, FriendsSearchRequestCount): builder.PrependInt32Slot(122, FriendsSearchRequestCount, 0)
def ConstCommonExcelAddFriendsSearchRequestCount(builder, FriendsSearchRequestCount):
    """This method is deprecated. Please switch to AddFriendsSearchRequestCount."""
    return AddFriendsSearchRequestCount(builder, FriendsSearchRequestCount)
def AddFriendsMaxApplicant(builder, FriendsMaxApplicant): builder.PrependInt32Slot(123, FriendsMaxApplicant, 0)
def ConstCommonExcelAddFriendsMaxApplicant(builder, FriendsMaxApplicant):
    """This method is deprecated. Please switch to AddFriendsMaxApplicant."""
    return AddFriendsMaxApplicant(builder, FriendsMaxApplicant)
def AddIdCardDefaultCharacterId(builder, IdCardDefaultCharacterId): builder.PrependInt64Slot(124, IdCardDefaultCharacterId, 0)
def ConstCommonExcelAddIdCardDefaultCharacterId(builder, IdCardDefaultCharacterId):
    """This method is deprecated. Please switch to AddIdCardDefaultCharacterId."""
    return AddIdCardDefaultCharacterId(builder, IdCardDefaultCharacterId)
def AddIdCardDefaultBgId(builder, IdCardDefaultBgId): builder.PrependInt64Slot(125, IdCardDefaultBgId, 0)
def ConstCommonExcelAddIdCardDefaultBgId(builder, IdCardDefaultBgId):
    """This method is deprecated. Please switch to AddIdCardDefaultBgId."""
    return AddIdCardDefaultBgId(builder, IdCardDefaultBgId)
def AddWorldRaidGemEnterCost(builder, WorldRaidGemEnterCost): builder.PrependInt64Slot(126, WorldRaidGemEnterCost, 0)
def ConstCommonExcelAddWorldRaidGemEnterCost(builder, WorldRaidGemEnterCost):
    """This method is deprecated. Please switch to AddWorldRaidGemEnterCost."""
    return AddWorldRaidGemEnterCost(builder, WorldRaidGemEnterCost)
def AddWorldRaidGemEnterAmout(builder, WorldRaidGemEnterAmout): builder.PrependInt64Slot(127, WorldRaidGemEnterAmout, 0)
def ConstCommonExcelAddWorldRaidGemEnterAmout(builder, WorldRaidGemEnterAmout):
    """This method is deprecated. Please switch to AddWorldRaidGemEnterAmout."""
    return AddWorldRaidGemEnterAmout(builder, WorldRaidGemEnterAmout)
def AddFriendIdCardCommentMaxLength(builder, FriendIdCardCommentMaxLength): builder.PrependInt64Slot(128, FriendIdCardCommentMaxLength, 0)
def ConstCommonExcelAddFriendIdCardCommentMaxLength(builder, FriendIdCardCommentMaxLength):
    """This method is deprecated. Please switch to AddFriendIdCardCommentMaxLength."""
    return AddFriendIdCardCommentMaxLength(builder, FriendIdCardCommentMaxLength)
def AddFormationPresetNumberOfEchelonTab(builder, FormationPresetNumberOfEchelonTab): builder.PrependInt32Slot(129, FormationPresetNumberOfEchelonTab, 0)
def ConstCommonExcelAddFormationPresetNumberOfEchelonTab(builder, FormationPresetNumberOfEchelonTab):
    """This method is deprecated. Please switch to AddFormationPresetNumberOfEchelonTab."""
    return AddFormationPresetNumberOfEchelonTab(builder, FormationPresetNumberOfEchelonTab)
def AddFormationPresetNumberOfEchelon(builder, FormationPresetNumberOfEchelon): builder.PrependInt32Slot(130, FormationPresetNumberOfEchelon, 0)
def ConstCommonExcelAddFormationPresetNumberOfEchelon(builder, FormationPresetNumberOfEchelon):
    """This method is deprecated. Please switch to AddFormationPresetNumberOfEchelon."""
    return AddFormationPresetNumberOfEchelon(builder, FormationPresetNumberOfEchelon)
def AddFormationPresetRecentNumberOfEchelon(builder, FormationPresetRecentNumberOfEchelon): builder.PrependInt32Slot(131, FormationPresetRecentNumberOfEchelon, 0)
def ConstCommonExcelAddFormationPresetRecentNumberOfEchelon(builder, FormationPresetRecentNumberOfEchelon):
    """This method is deprecated. Please switch to AddFormationPresetRecentNumberOfEchelon."""
    return AddFormationPresetRecentNumberOfEchelon(builder, FormationPresetRecentNumberOfEchelon)
def AddFormationPresetEchelonTabTextLength(builder, FormationPresetEchelonTabTextLength): builder.PrependInt32Slot(132, FormationPresetEchelonTabTextLength, 0)
def ConstCommonExcelAddFormationPresetEchelonTabTextLength(builder, FormationPresetEchelonTabTextLength):
    """This method is deprecated. Please switch to AddFormationPresetEchelonTabTextLength."""
    return AddFormationPresetEchelonTabTextLength(builder, FormationPresetEchelonTabTextLength)
def AddFormationPresetEchelonSlotTextLength(builder, FormationPresetEchelonSlotTextLength): builder.PrependInt32Slot(133, FormationPresetEchelonSlotTextLength, 0)
def ConstCommonExcelAddFormationPresetEchelonSlotTextLength(builder, FormationPresetEchelonSlotTextLength):
    """This method is deprecated. Please switch to AddFormationPresetEchelonSlotTextLength."""
    return AddFormationPresetEchelonSlotTextLength(builder, FormationPresetEchelonSlotTextLength)
def AddCharProfileRowIntervalKr(builder, CharProfileRowIntervalKr): builder.PrependInt32Slot(134, CharProfileRowIntervalKr, 0)
def ConstCommonExcelAddCharProfileRowIntervalKr(builder, CharProfileRowIntervalKr):
    """This method is deprecated. Please switch to AddCharProfileRowIntervalKr."""
    return AddCharProfileRowIntervalKr(builder, CharProfileRowIntervalKr)
def AddCharProfileRowIntervalJp(builder, CharProfileRowIntervalJp): builder.PrependInt32Slot(135, CharProfileRowIntervalJp, 0)
def ConstCommonExcelAddCharProfileRowIntervalJp(builder, CharProfileRowIntervalJp):
    """This method is deprecated. Please switch to AddCharProfileRowIntervalJp."""
    return AddCharProfileRowIntervalJp(builder, CharProfileRowIntervalJp)
def AddCharProfilePopupRowIntervalKr(builder, CharProfilePopupRowIntervalKr): builder.PrependInt32Slot(136, CharProfilePopupRowIntervalKr, 0)
def ConstCommonExcelAddCharProfilePopupRowIntervalKr(builder, CharProfilePopupRowIntervalKr):
    """This method is deprecated. Please switch to AddCharProfilePopupRowIntervalKr."""
    return AddCharProfilePopupRowIntervalKr(builder, CharProfilePopupRowIntervalKr)
def AddCharProfilePopupRowIntervalJp(builder, CharProfilePopupRowIntervalJp): builder.PrependInt32Slot(137, CharProfilePopupRowIntervalJp, 0)
def ConstCommonExcelAddCharProfilePopupRowIntervalJp(builder, CharProfilePopupRowIntervalJp):
    """This method is deprecated. Please switch to AddCharProfilePopupRowIntervalJp."""
    return AddCharProfilePopupRowIntervalJp(builder, CharProfilePopupRowIntervalJp)
def AddBeforehandGachaCount(builder, BeforehandGachaCount): builder.PrependInt32Slot(138, BeforehandGachaCount, 0)
def ConstCommonExcelAddBeforehandGachaCount(builder, BeforehandGachaCount):
    """This method is deprecated. Please switch to AddBeforehandGachaCount."""
    return AddBeforehandGachaCount(builder, BeforehandGachaCount)
def AddBeforehandGachaGroupId(builder, BeforehandGachaGroupId): builder.PrependInt32Slot(139, BeforehandGachaGroupId, 0)
def ConstCommonExcelAddBeforehandGachaGroupId(builder, BeforehandGachaGroupId):
    """This method is deprecated. Please switch to AddBeforehandGachaGroupId."""
    return AddBeforehandGachaGroupId(builder, BeforehandGachaGroupId)
def AddRenewalDisplayOrderDay(builder, RenewalDisplayOrderDay): builder.PrependInt32Slot(140, RenewalDisplayOrderDay, 0)
def ConstCommonExcelAddRenewalDisplayOrderDay(builder, RenewalDisplayOrderDay):
    """This method is deprecated. Please switch to AddRenewalDisplayOrderDay."""
    return AddRenewalDisplayOrderDay(builder, RenewalDisplayOrderDay)
def AddEmblemDefaultId(builder, EmblemDefaultId): builder.PrependInt64Slot(141, EmblemDefaultId, 0)
def ConstCommonExcelAddEmblemDefaultId(builder, EmblemDefaultId):
    """This method is deprecated. Please switch to AddEmblemDefaultId."""
    return AddEmblemDefaultId(builder, EmblemDefaultId)
def AddBirthdayMailStartDate(builder, BirthdayMailStartDate): builder.PrependUOffsetTRelativeSlot(142, flatbuffers.number_types.UOffsetTFlags.py_type(BirthdayMailStartDate), 0)
def ConstCommonExcelAddBirthdayMailStartDate(builder, BirthdayMailStartDate):
    """This method is deprecated. Please switch to AddBirthdayMailStartDate."""
    return AddBirthdayMailStartDate(builder, BirthdayMailStartDate)
def AddBirthdayMailRemainDate(builder, BirthdayMailRemainDate): builder.PrependInt32Slot(143, BirthdayMailRemainDate, 0)
def ConstCommonExcelAddBirthdayMailRemainDate(builder, BirthdayMailRemainDate):
    """This method is deprecated. Please switch to AddBirthdayMailRemainDate."""
    return AddBirthdayMailRemainDate(builder, BirthdayMailRemainDate)
def AddBirthdayMailParcelType(builder, BirthdayMailParcelType): builder.PrependInt32Slot(144, BirthdayMailParcelType, 0)
def ConstCommonExcelAddBirthdayMailParcelType(builder, BirthdayMailParcelType):
    """This method is deprecated. Please switch to AddBirthdayMailParcelType."""
    return AddBirthdayMailParcelType(builder, BirthdayMailParcelType)
def AddBirthdayMailParcelId(builder, BirthdayMailParcelId): builder.PrependInt64Slot(145, BirthdayMailParcelId, 0)
def ConstCommonExcelAddBirthdayMailParcelId(builder, BirthdayMailParcelId):
    """This method is deprecated. Please switch to AddBirthdayMailParcelId."""
    return AddBirthdayMailParcelId(builder, BirthdayMailParcelId)
def AddBirthdayMailParcelAmount(builder, BirthdayMailParcelAmount): builder.PrependInt32Slot(146, BirthdayMailParcelAmount, 0)
def ConstCommonExcelAddBirthdayMailParcelAmount(builder, BirthdayMailParcelAmount):
    """This method is deprecated. Please switch to AddBirthdayMailParcelAmount."""
    return AddBirthdayMailParcelAmount(builder, BirthdayMailParcelAmount)
def AddClearDeckAverageDeckCount(builder, ClearDeckAverageDeckCount): builder.PrependInt32Slot(147, ClearDeckAverageDeckCount, 0)
def ConstCommonExcelAddClearDeckAverageDeckCount(builder, ClearDeckAverageDeckCount):
    """This method is deprecated. Please switch to AddClearDeckAverageDeckCount."""
    return AddClearDeckAverageDeckCount(builder, ClearDeckAverageDeckCount)
def AddClearDeckWorldRaidSaveConditionCoefficient(builder, ClearDeckWorldRaidSaveConditionCoefficient): builder.PrependInt32Slot(148, ClearDeckWorldRaidSaveConditionCoefficient, 0)
def ConstCommonExcelAddClearDeckWorldRaidSaveConditionCoefficient(builder, ClearDeckWorldRaidSaveConditionCoefficient):
    """This method is deprecated. Please switch to AddClearDeckWorldRaidSaveConditionCoefficient."""
    return AddClearDeckWorldRaidSaveConditionCoefficient(builder, ClearDeckWorldRaidSaveConditionCoefficient)
def AddClearDeckShowCount(builder, ClearDeckShowCount): builder.PrependInt32Slot(149, ClearDeckShowCount, 0)
def ConstCommonExcelAddClearDeckShowCount(builder, ClearDeckShowCount):
    """This method is deprecated. Please switch to AddClearDeckShowCount."""
    return AddClearDeckShowCount(builder, ClearDeckShowCount)
def AddCharacterMaxLevel(builder, CharacterMaxLevel): builder.PrependInt32Slot(150, CharacterMaxLevel, 0)
def ConstCommonExcelAddCharacterMaxLevel(builder, CharacterMaxLevel):
    """This method is deprecated. Please switch to AddCharacterMaxLevel."""
    return AddCharacterMaxLevel(builder, CharacterMaxLevel)
def AddPotentialBonusStatMaxLevelMaxHP(builder, PotentialBonusStatMaxLevelMaxHP): builder.PrependInt32Slot(151, PotentialBonusStatMaxLevelMaxHP, 0)
def ConstCommonExcelAddPotentialBonusStatMaxLevelMaxHP(builder, PotentialBonusStatMaxLevelMaxHP):
    """This method is deprecated. Please switch to AddPotentialBonusStatMaxLevelMaxHP."""
    return AddPotentialBonusStatMaxLevelMaxHP(builder, PotentialBonusStatMaxLevelMaxHP)
def AddPotentialBonusStatMaxLevelAttackPower(builder, PotentialBonusStatMaxLevelAttackPower): builder.PrependInt32Slot(152, PotentialBonusStatMaxLevelAttackPower, 0)
def ConstCommonExcelAddPotentialBonusStatMaxLevelAttackPower(builder, PotentialBonusStatMaxLevelAttackPower):
    """This method is deprecated. Please switch to AddPotentialBonusStatMaxLevelAttackPower."""
    return AddPotentialBonusStatMaxLevelAttackPower(builder, PotentialBonusStatMaxLevelAttackPower)
def AddPotentialBonusStatMaxLevelHealPower(builder, PotentialBonusStatMaxLevelHealPower): builder.PrependInt32Slot(153, PotentialBonusStatMaxLevelHealPower, 0)
def ConstCommonExcelAddPotentialBonusStatMaxLevelHealPower(builder, PotentialBonusStatMaxLevelHealPower):
    """This method is deprecated. Please switch to AddPotentialBonusStatMaxLevelHealPower."""
    return AddPotentialBonusStatMaxLevelHealPower(builder, PotentialBonusStatMaxLevelHealPower)
def AddPotentialOpenConditionCharacterLevel(builder, PotentialOpenConditionCharacterLevel): builder.PrependInt32Slot(154, PotentialOpenConditionCharacterLevel, 0)
def ConstCommonExcelAddPotentialOpenConditionCharacterLevel(builder, PotentialOpenConditionCharacterLevel):
    """This method is deprecated. Please switch to AddPotentialOpenConditionCharacterLevel."""
    return AddPotentialOpenConditionCharacterLevel(builder, PotentialOpenConditionCharacterLevel)
def AddAssistStrangerMinLevel(builder, AssistStrangerMinLevel): builder.PrependInt32Slot(155, AssistStrangerMinLevel, 0)
def ConstCommonExcelAddAssistStrangerMinLevel(builder, AssistStrangerMinLevel):
    """This method is deprecated. Please switch to AddAssistStrangerMinLevel."""
    return AddAssistStrangerMinLevel(builder, AssistStrangerMinLevel)
def AddAssistStrangerMaxLevel(builder, AssistStrangerMaxLevel): builder.PrependInt32Slot(156, AssistStrangerMaxLevel, 0)
def ConstCommonExcelAddAssistStrangerMaxLevel(builder, AssistStrangerMaxLevel):
    """This method is deprecated. Please switch to AddAssistStrangerMaxLevel."""
    return AddAssistStrangerMaxLevel(builder, AssistStrangerMaxLevel)
def AddMaxBlockedUserCount(builder, MaxBlockedUserCount): builder.PrependInt32Slot(157, MaxBlockedUserCount, 0)
def ConstCommonExcelAddMaxBlockedUserCount(builder, MaxBlockedUserCount):
    """This method is deprecated. Please switch to AddMaxBlockedUserCount."""
    return AddMaxBlockedUserCount(builder, MaxBlockedUserCount)
def End(builder): return builder.EndObject()
def ConstCommonExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)