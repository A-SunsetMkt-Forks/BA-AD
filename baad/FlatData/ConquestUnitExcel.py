# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConquestUnitExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConquestUnitExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConquestUnitExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConquestUnitExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConquestUnitExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestUnitExcel
    def PrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestUnitExcel
    def StrategyPrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestUnitExcel
    def Scale(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConquestUnitExcel
    def ShieldEffectScale(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConquestUnitExcel
    def UnitFxPrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestUnitExcel
    def PointAnimation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestUnitExcel
    def EnemyType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def Team(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def UnitGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def PrevUnitGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def BattleDuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def GroundId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def StarGoal(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConquestUnitExcel
    def StarGoalAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConquestUnitExcel
    def StarGoalLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestUnitExcel
    def StarGoalIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        return o == 0

    # ConquestUnitExcel
    def StarGoalAmount(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConquestUnitExcel
    def StarGoalAmountAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConquestUnitExcel
    def StarGoalAmountLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestUnitExcel
    def StarGoalAmountIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        return o == 0

    # ConquestUnitExcel
    def GroupBuffId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def StageEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def StageEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def StageEnterCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def ManageEchelonStageEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def ManageEchelonStageEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def ManageEchelonStageEnterCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def EnterScenarioGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def ClearScenarioGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def ConquestRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def StageTopography_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def RecommandLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def TacticRewardExp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def FixedEchelonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestUnitExcel
    def EchelonExtensionType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(32)
def ConquestUnitExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def ConquestUnitExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddKey(builder, Key): builder.PrependUint32Slot(1, Key, 0)
def ConquestUnitExcelAddKey(builder, Key):
    """This method is deprecated. Please switch to AddKey."""
    return AddKey(builder, Key)
def AddName(builder, Name): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def ConquestUnitExcelAddName(builder, Name):
    """This method is deprecated. Please switch to AddName."""
    return AddName(builder, Name)
def AddPrefabName(builder, PrefabName): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(PrefabName), 0)
def ConquestUnitExcelAddPrefabName(builder, PrefabName):
    """This method is deprecated. Please switch to AddPrefabName."""
    return AddPrefabName(builder, PrefabName)
def AddStrategyPrefabName(builder, StrategyPrefabName): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyPrefabName), 0)
def ConquestUnitExcelAddStrategyPrefabName(builder, StrategyPrefabName):
    """This method is deprecated. Please switch to AddStrategyPrefabName."""
    return AddStrategyPrefabName(builder, StrategyPrefabName)
def AddScale(builder, Scale): builder.PrependFloat32Slot(5, Scale, 0.0)
def ConquestUnitExcelAddScale(builder, Scale):
    """This method is deprecated. Please switch to AddScale."""
    return AddScale(builder, Scale)
def AddShieldEffectScale(builder, ShieldEffectScale): builder.PrependFloat32Slot(6, ShieldEffectScale, 0.0)
def ConquestUnitExcelAddShieldEffectScale(builder, ShieldEffectScale):
    """This method is deprecated. Please switch to AddShieldEffectScale."""
    return AddShieldEffectScale(builder, ShieldEffectScale)
def AddUnitFxPrefabName(builder, UnitFxPrefabName): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(UnitFxPrefabName), 0)
def ConquestUnitExcelAddUnitFxPrefabName(builder, UnitFxPrefabName):
    """This method is deprecated. Please switch to AddUnitFxPrefabName."""
    return AddUnitFxPrefabName(builder, UnitFxPrefabName)
def AddPointAnimation(builder, PointAnimation): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(PointAnimation), 0)
def ConquestUnitExcelAddPointAnimation(builder, PointAnimation):
    """This method is deprecated. Please switch to AddPointAnimation."""
    return AddPointAnimation(builder, PointAnimation)
def AddEnemyType(builder, EnemyType): builder.PrependInt32Slot(9, EnemyType, 0)
def ConquestUnitExcelAddEnemyType(builder, EnemyType):
    """This method is deprecated. Please switch to AddEnemyType."""
    return AddEnemyType(builder, EnemyType)
def AddTeam(builder, Team): builder.PrependInt32Slot(10, Team, 0)
def ConquestUnitExcelAddTeam(builder, Team):
    """This method is deprecated. Please switch to AddTeam."""
    return AddTeam(builder, Team)
def AddUnitGroup(builder, UnitGroup): builder.PrependInt64Slot(11, UnitGroup, 0)
def ConquestUnitExcelAddUnitGroup(builder, UnitGroup):
    """This method is deprecated. Please switch to AddUnitGroup."""
    return AddUnitGroup(builder, UnitGroup)
def AddPrevUnitGroup(builder, PrevUnitGroup): builder.PrependInt64Slot(12, PrevUnitGroup, 0)
def ConquestUnitExcelAddPrevUnitGroup(builder, PrevUnitGroup):
    """This method is deprecated. Please switch to AddPrevUnitGroup."""
    return AddPrevUnitGroup(builder, PrevUnitGroup)
def AddBattleDuration(builder, BattleDuration): builder.PrependInt64Slot(13, BattleDuration, 0)
def ConquestUnitExcelAddBattleDuration(builder, BattleDuration):
    """This method is deprecated. Please switch to AddBattleDuration."""
    return AddBattleDuration(builder, BattleDuration)
def AddGroundId(builder, GroundId): builder.PrependInt64Slot(14, GroundId, 0)
def ConquestUnitExcelAddGroundId(builder, GroundId):
    """This method is deprecated. Please switch to AddGroundId."""
    return AddGroundId(builder, GroundId)
def AddStarGoal(builder, StarGoal): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(StarGoal), 0)
def ConquestUnitExcelAddStarGoal(builder, StarGoal):
    """This method is deprecated. Please switch to AddStarGoal."""
    return AddStarGoal(builder, StarGoal)
def StartStarGoalVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConquestUnitExcelStartStarGoalVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStarGoalVector(builder, numElems)
def AddStarGoalAmount(builder, StarGoalAmount): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(StarGoalAmount), 0)
def ConquestUnitExcelAddStarGoalAmount(builder, StarGoalAmount):
    """This method is deprecated. Please switch to AddStarGoalAmount."""
    return AddStarGoalAmount(builder, StarGoalAmount)
def StartStarGoalAmountVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConquestUnitExcelStartStarGoalAmountVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStarGoalAmountVector(builder, numElems)
def AddGroupBuffId(builder, GroupBuffId): builder.PrependInt64Slot(17, GroupBuffId, 0)
def ConquestUnitExcelAddGroupBuffId(builder, GroupBuffId):
    """This method is deprecated. Please switch to AddGroupBuffId."""
    return AddGroupBuffId(builder, GroupBuffId)
def AddStageEnterCostType(builder, StageEnterCostType): builder.PrependInt32Slot(18, StageEnterCostType, 0)
def ConquestUnitExcelAddStageEnterCostType(builder, StageEnterCostType):
    """This method is deprecated. Please switch to AddStageEnterCostType."""
    return AddStageEnterCostType(builder, StageEnterCostType)
def AddStageEnterCostId(builder, StageEnterCostId): builder.PrependInt64Slot(19, StageEnterCostId, 0)
def ConquestUnitExcelAddStageEnterCostId(builder, StageEnterCostId):
    """This method is deprecated. Please switch to AddStageEnterCostId."""
    return AddStageEnterCostId(builder, StageEnterCostId)
def AddStageEnterCostAmount(builder, StageEnterCostAmount): builder.PrependInt32Slot(20, StageEnterCostAmount, 0)
def ConquestUnitExcelAddStageEnterCostAmount(builder, StageEnterCostAmount):
    """This method is deprecated. Please switch to AddStageEnterCostAmount."""
    return AddStageEnterCostAmount(builder, StageEnterCostAmount)
def AddManageEchelonStageEnterCostType(builder, ManageEchelonStageEnterCostType): builder.PrependInt32Slot(21, ManageEchelonStageEnterCostType, 0)
def ConquestUnitExcelAddManageEchelonStageEnterCostType(builder, ManageEchelonStageEnterCostType):
    """This method is deprecated. Please switch to AddManageEchelonStageEnterCostType."""
    return AddManageEchelonStageEnterCostType(builder, ManageEchelonStageEnterCostType)
def AddManageEchelonStageEnterCostId(builder, ManageEchelonStageEnterCostId): builder.PrependInt64Slot(22, ManageEchelonStageEnterCostId, 0)
def ConquestUnitExcelAddManageEchelonStageEnterCostId(builder, ManageEchelonStageEnterCostId):
    """This method is deprecated. Please switch to AddManageEchelonStageEnterCostId."""
    return AddManageEchelonStageEnterCostId(builder, ManageEchelonStageEnterCostId)
def AddManageEchelonStageEnterCostAmount(builder, ManageEchelonStageEnterCostAmount): builder.PrependInt32Slot(23, ManageEchelonStageEnterCostAmount, 0)
def ConquestUnitExcelAddManageEchelonStageEnterCostAmount(builder, ManageEchelonStageEnterCostAmount):
    """This method is deprecated. Please switch to AddManageEchelonStageEnterCostAmount."""
    return AddManageEchelonStageEnterCostAmount(builder, ManageEchelonStageEnterCostAmount)
def AddEnterScenarioGroupId(builder, EnterScenarioGroupId): builder.PrependInt64Slot(24, EnterScenarioGroupId, 0)
def ConquestUnitExcelAddEnterScenarioGroupId(builder, EnterScenarioGroupId):
    """This method is deprecated. Please switch to AddEnterScenarioGroupId."""
    return AddEnterScenarioGroupId(builder, EnterScenarioGroupId)
def AddClearScenarioGroupId(builder, ClearScenarioGroupId): builder.PrependInt64Slot(25, ClearScenarioGroupId, 0)
def ConquestUnitExcelAddClearScenarioGroupId(builder, ClearScenarioGroupId):
    """This method is deprecated. Please switch to AddClearScenarioGroupId."""
    return AddClearScenarioGroupId(builder, ClearScenarioGroupId)
def AddConquestRewardId(builder, ConquestRewardId): builder.PrependInt64Slot(26, ConquestRewardId, 0)
def ConquestUnitExcelAddConquestRewardId(builder, ConquestRewardId):
    """This method is deprecated. Please switch to AddConquestRewardId."""
    return AddConquestRewardId(builder, ConquestRewardId)
def AddStageTopography_(builder, StageTopography_): builder.PrependInt32Slot(27, StageTopography_, 0)
def ConquestUnitExcelAddStageTopography_(builder, StageTopography_):
    """This method is deprecated. Please switch to AddStageTopography_."""
    return AddStageTopography_(builder, StageTopography_)
def AddRecommandLevel(builder, RecommandLevel): builder.PrependInt32Slot(28, RecommandLevel, 0)
def ConquestUnitExcelAddRecommandLevel(builder, RecommandLevel):
    """This method is deprecated. Please switch to AddRecommandLevel."""
    return AddRecommandLevel(builder, RecommandLevel)
def AddTacticRewardExp(builder, TacticRewardExp): builder.PrependInt64Slot(29, TacticRewardExp, 0)
def ConquestUnitExcelAddTacticRewardExp(builder, TacticRewardExp):
    """This method is deprecated. Please switch to AddTacticRewardExp."""
    return AddTacticRewardExp(builder, TacticRewardExp)
def AddFixedEchelonId(builder, FixedEchelonId): builder.PrependInt64Slot(30, FixedEchelonId, 0)
def ConquestUnitExcelAddFixedEchelonId(builder, FixedEchelonId):
    """This method is deprecated. Please switch to AddFixedEchelonId."""
    return AddFixedEchelonId(builder, FixedEchelonId)
def AddEchelonExtensionType_(builder, EchelonExtensionType_): builder.PrependInt32Slot(31, EchelonExtensionType_, 0)
def ConquestUnitExcelAddEchelonExtensionType_(builder, EchelonExtensionType_):
    """This method is deprecated. Please switch to AddEchelonExtensionType_."""
    return AddEchelonExtensionType_(builder, EchelonExtensionType_)
def End(builder): return builder.EndObject()
def ConquestUnitExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)