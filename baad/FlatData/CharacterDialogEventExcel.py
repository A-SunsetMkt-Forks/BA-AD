# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CharacterDialogEventExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CharacterDialogEventExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCharacterDialogEventExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CharacterDialogEventExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CharacterDialogEventExcel
    def CostumeUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def OriginalCharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def EventID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def ProductionStep_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def DialogCategory_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def DialogCondition_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def DialogConditionDetail_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def DialogConditionDetailValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def DialogType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def ActionName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogEventExcel
    def Duration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def AnimationName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogEventExcel
    def LocalizeKR(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogEventExcel
    def LocalizeJP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogEventExcel
    def VoiceId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # CharacterDialogEventExcel
    def VoiceIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # CharacterDialogEventExcel
    def VoiceIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CharacterDialogEventExcel
    def VoiceIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        return o == 0

    # CharacterDialogEventExcel
    def CollectionVisible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogEventExcel
    def CVCollectionType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def UnlockEventSeason(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def ScenarioGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogEventExcel
    def LocalizeCVGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(22)
def CharacterDialogEventExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCostumeUniqueId(builder, CostumeUniqueId): builder.PrependInt64Slot(0, CostumeUniqueId, 0)
def CharacterDialogEventExcelAddCostumeUniqueId(builder, CostumeUniqueId):
    """This method is deprecated. Please switch to AddCostumeUniqueId."""
    return AddCostumeUniqueId(builder, CostumeUniqueId)
def AddOriginalCharacterId(builder, OriginalCharacterId): builder.PrependInt64Slot(1, OriginalCharacterId, 0)
def CharacterDialogEventExcelAddOriginalCharacterId(builder, OriginalCharacterId):
    """This method is deprecated. Please switch to AddOriginalCharacterId."""
    return AddOriginalCharacterId(builder, OriginalCharacterId)
def AddDisplayOrder(builder, DisplayOrder): builder.PrependInt64Slot(2, DisplayOrder, 0)
def CharacterDialogEventExcelAddDisplayOrder(builder, DisplayOrder):
    """This method is deprecated. Please switch to AddDisplayOrder."""
    return AddDisplayOrder(builder, DisplayOrder)
def AddEventID(builder, EventID): builder.PrependInt64Slot(3, EventID, 0)
def CharacterDialogEventExcelAddEventID(builder, EventID):
    """This method is deprecated. Please switch to AddEventID."""
    return AddEventID(builder, EventID)
def AddProductionStep_(builder, ProductionStep_): builder.PrependInt32Slot(4, ProductionStep_, 0)
def CharacterDialogEventExcelAddProductionStep_(builder, ProductionStep_):
    """This method is deprecated. Please switch to AddProductionStep_."""
    return AddProductionStep_(builder, ProductionStep_)
def AddDialogCategory_(builder, DialogCategory_): builder.PrependInt32Slot(5, DialogCategory_, 0)
def CharacterDialogEventExcelAddDialogCategory_(builder, DialogCategory_):
    """This method is deprecated. Please switch to AddDialogCategory_."""
    return AddDialogCategory_(builder, DialogCategory_)
def AddDialogCondition_(builder, DialogCondition_): builder.PrependInt32Slot(6, DialogCondition_, 0)
def CharacterDialogEventExcelAddDialogCondition_(builder, DialogCondition_):
    """This method is deprecated. Please switch to AddDialogCondition_."""
    return AddDialogCondition_(builder, DialogCondition_)
def AddDialogConditionDetail_(builder, DialogConditionDetail_): builder.PrependInt32Slot(7, DialogConditionDetail_, 0)
def CharacterDialogEventExcelAddDialogConditionDetail_(builder, DialogConditionDetail_):
    """This method is deprecated. Please switch to AddDialogConditionDetail_."""
    return AddDialogConditionDetail_(builder, DialogConditionDetail_)
def AddDialogConditionDetailValue(builder, DialogConditionDetailValue): builder.PrependInt64Slot(8, DialogConditionDetailValue, 0)
def CharacterDialogEventExcelAddDialogConditionDetailValue(builder, DialogConditionDetailValue):
    """This method is deprecated. Please switch to AddDialogConditionDetailValue."""
    return AddDialogConditionDetailValue(builder, DialogConditionDetailValue)
def AddGroupId(builder, GroupId): builder.PrependInt64Slot(9, GroupId, 0)
def CharacterDialogEventExcelAddGroupId(builder, GroupId):
    """This method is deprecated. Please switch to AddGroupId."""
    return AddGroupId(builder, GroupId)
def AddDialogType_(builder, DialogType_): builder.PrependInt32Slot(10, DialogType_, 0)
def CharacterDialogEventExcelAddDialogType_(builder, DialogType_):
    """This method is deprecated. Please switch to AddDialogType_."""
    return AddDialogType_(builder, DialogType_)
def AddActionName(builder, ActionName): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(ActionName), 0)
def CharacterDialogEventExcelAddActionName(builder, ActionName):
    """This method is deprecated. Please switch to AddActionName."""
    return AddActionName(builder, ActionName)
def AddDuration(builder, Duration): builder.PrependInt64Slot(12, Duration, 0)
def CharacterDialogEventExcelAddDuration(builder, Duration):
    """This method is deprecated. Please switch to AddDuration."""
    return AddDuration(builder, Duration)
def AddAnimationName(builder, AnimationName): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(AnimationName), 0)
def CharacterDialogEventExcelAddAnimationName(builder, AnimationName):
    """This method is deprecated. Please switch to AddAnimationName."""
    return AddAnimationName(builder, AnimationName)
def AddLocalizeKR(builder, LocalizeKR): builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(LocalizeKR), 0)
def CharacterDialogEventExcelAddLocalizeKR(builder, LocalizeKR):
    """This method is deprecated. Please switch to AddLocalizeKR."""
    return AddLocalizeKR(builder, LocalizeKR)
def AddLocalizeJP(builder, LocalizeJP): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(LocalizeJP), 0)
def CharacterDialogEventExcelAddLocalizeJP(builder, LocalizeJP):
    """This method is deprecated. Please switch to AddLocalizeJP."""
    return AddLocalizeJP(builder, LocalizeJP)
def AddVoiceId(builder, VoiceId): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(VoiceId), 0)
def CharacterDialogEventExcelAddVoiceId(builder, VoiceId):
    """This method is deprecated. Please switch to AddVoiceId."""
    return AddVoiceId(builder, VoiceId)
def StartVoiceIdVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CharacterDialogEventExcelStartVoiceIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartVoiceIdVector(builder, numElems)
def AddCollectionVisible(builder, CollectionVisible): builder.PrependBoolSlot(17, CollectionVisible, 0)
def CharacterDialogEventExcelAddCollectionVisible(builder, CollectionVisible):
    """This method is deprecated. Please switch to AddCollectionVisible."""
    return AddCollectionVisible(builder, CollectionVisible)
def AddCVCollectionType_(builder, CVCollectionType_): builder.PrependInt32Slot(18, CVCollectionType_, 0)
def CharacterDialogEventExcelAddCVCollectionType_(builder, CVCollectionType_):
    """This method is deprecated. Please switch to AddCVCollectionType_."""
    return AddCVCollectionType_(builder, CVCollectionType_)
def AddUnlockEventSeason(builder, UnlockEventSeason): builder.PrependInt64Slot(19, UnlockEventSeason, 0)
def CharacterDialogEventExcelAddUnlockEventSeason(builder, UnlockEventSeason):
    """This method is deprecated. Please switch to AddUnlockEventSeason."""
    return AddUnlockEventSeason(builder, UnlockEventSeason)
def AddScenarioGroupId(builder, ScenarioGroupId): builder.PrependInt64Slot(20, ScenarioGroupId, 0)
def CharacterDialogEventExcelAddScenarioGroupId(builder, ScenarioGroupId):
    """This method is deprecated. Please switch to AddScenarioGroupId."""
    return AddScenarioGroupId(builder, ScenarioGroupId)
def AddLocalizeCVGroup(builder, LocalizeCVGroup): builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(LocalizeCVGroup), 0)
def CharacterDialogEventExcelAddLocalizeCVGroup(builder, LocalizeCVGroup):
    """This method is deprecated. Please switch to AddLocalizeCVGroup."""
    return AddLocalizeCVGroup(builder, LocalizeCVGroup)
def End(builder): return builder.EndObject()
def CharacterDialogEventExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)