# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ParcelAutoSynthExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ParcelAutoSynthExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsParcelAutoSynthExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ParcelAutoSynthExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ParcelAutoSynthExcel
    def RequireParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def RequireParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def RequireParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def SynthStartAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def SynthEndAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def SynthMaxItem(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ParcelAutoSynthExcel
    def ResultParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def ResultParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ParcelAutoSynthExcel
    def ResultParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(9)
def ParcelAutoSynthExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddRequireParcelType(builder, RequireParcelType): builder.PrependInt32Slot(0, RequireParcelType, 0)
def ParcelAutoSynthExcelAddRequireParcelType(builder, RequireParcelType):
    """This method is deprecated. Please switch to AddRequireParcelType."""
    return AddRequireParcelType(builder, RequireParcelType)
def AddRequireParcelId(builder, RequireParcelId): builder.PrependInt64Slot(1, RequireParcelId, 0)
def ParcelAutoSynthExcelAddRequireParcelId(builder, RequireParcelId):
    """This method is deprecated. Please switch to AddRequireParcelId."""
    return AddRequireParcelId(builder, RequireParcelId)
def AddRequireParcelAmount(builder, RequireParcelAmount): builder.PrependInt64Slot(2, RequireParcelAmount, 0)
def ParcelAutoSynthExcelAddRequireParcelAmount(builder, RequireParcelAmount):
    """This method is deprecated. Please switch to AddRequireParcelAmount."""
    return AddRequireParcelAmount(builder, RequireParcelAmount)
def AddSynthStartAmount(builder, SynthStartAmount): builder.PrependInt64Slot(3, SynthStartAmount, 0)
def ParcelAutoSynthExcelAddSynthStartAmount(builder, SynthStartAmount):
    """This method is deprecated. Please switch to AddSynthStartAmount."""
    return AddSynthStartAmount(builder, SynthStartAmount)
def AddSynthEndAmount(builder, SynthEndAmount): builder.PrependInt64Slot(4, SynthEndAmount, 0)
def ParcelAutoSynthExcelAddSynthEndAmount(builder, SynthEndAmount):
    """This method is deprecated. Please switch to AddSynthEndAmount."""
    return AddSynthEndAmount(builder, SynthEndAmount)
def AddSynthMaxItem(builder, SynthMaxItem): builder.PrependBoolSlot(5, SynthMaxItem, 0)
def ParcelAutoSynthExcelAddSynthMaxItem(builder, SynthMaxItem):
    """This method is deprecated. Please switch to AddSynthMaxItem."""
    return AddSynthMaxItem(builder, SynthMaxItem)
def AddResultParcelType(builder, ResultParcelType): builder.PrependInt32Slot(6, ResultParcelType, 0)
def ParcelAutoSynthExcelAddResultParcelType(builder, ResultParcelType):
    """This method is deprecated. Please switch to AddResultParcelType."""
    return AddResultParcelType(builder, ResultParcelType)
def AddResultParcelId(builder, ResultParcelId): builder.PrependInt64Slot(7, ResultParcelId, 0)
def ParcelAutoSynthExcelAddResultParcelId(builder, ResultParcelId):
    """This method is deprecated. Please switch to AddResultParcelId."""
    return AddResultParcelId(builder, ResultParcelId)
def AddResultParcelAmount(builder, ResultParcelAmount): builder.PrependInt64Slot(8, ResultParcelAmount, 0)
def ParcelAutoSynthExcelAddResultParcelAmount(builder, ResultParcelAmount):
    """This method is deprecated. Please switch to AddResultParcelAmount."""
    return AddResultParcelAmount(builder, ResultParcelAmount)
def End(builder): return builder.EndObject()
def ParcelAutoSynthExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)