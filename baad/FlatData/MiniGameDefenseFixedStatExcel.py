# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MiniGameDefenseFixedStatExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MiniGameDefenseFixedStatExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMiniGameDefenseFixedStatExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MiniGameDefenseFixedStatExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MiniGameDefenseFixedStatExcel
    def MinigameDefenseFixedStatId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Grade(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def ExSkillLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def NoneExSkillLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Equipment1Tier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Equipment1Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Equipment2Tier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Equipment2Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Equipment3Tier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def Equipment3Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def CharacterWeaponGrade(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def CharacterWeaponLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def CharacterGearTier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MiniGameDefenseFixedStatExcel
    def CharacterGearLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(15)
def MiniGameDefenseFixedStatExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddMinigameDefenseFixedStatId(builder, MinigameDefenseFixedStatId): builder.PrependInt64Slot(0, MinigameDefenseFixedStatId, 0)
def MiniGameDefenseFixedStatExcelAddMinigameDefenseFixedStatId(builder, MinigameDefenseFixedStatId):
    """This method is deprecated. Please switch to AddMinigameDefenseFixedStatId."""
    return AddMinigameDefenseFixedStatId(builder, MinigameDefenseFixedStatId)
def AddLevel(builder, Level): builder.PrependInt32Slot(1, Level, 0)
def MiniGameDefenseFixedStatExcelAddLevel(builder, Level):
    """This method is deprecated. Please switch to AddLevel."""
    return AddLevel(builder, Level)
def AddGrade(builder, Grade): builder.PrependInt32Slot(2, Grade, 0)
def MiniGameDefenseFixedStatExcelAddGrade(builder, Grade):
    """This method is deprecated. Please switch to AddGrade."""
    return AddGrade(builder, Grade)
def AddExSkillLevel(builder, ExSkillLevel): builder.PrependInt32Slot(3, ExSkillLevel, 0)
def MiniGameDefenseFixedStatExcelAddExSkillLevel(builder, ExSkillLevel):
    """This method is deprecated. Please switch to AddExSkillLevel."""
    return AddExSkillLevel(builder, ExSkillLevel)
def AddNoneExSkillLevel(builder, NoneExSkillLevel): builder.PrependInt32Slot(4, NoneExSkillLevel, 0)
def MiniGameDefenseFixedStatExcelAddNoneExSkillLevel(builder, NoneExSkillLevel):
    """This method is deprecated. Please switch to AddNoneExSkillLevel."""
    return AddNoneExSkillLevel(builder, NoneExSkillLevel)
def AddEquipment1Tier(builder, Equipment1Tier): builder.PrependInt32Slot(5, Equipment1Tier, 0)
def MiniGameDefenseFixedStatExcelAddEquipment1Tier(builder, Equipment1Tier):
    """This method is deprecated. Please switch to AddEquipment1Tier."""
    return AddEquipment1Tier(builder, Equipment1Tier)
def AddEquipment1Level(builder, Equipment1Level): builder.PrependInt32Slot(6, Equipment1Level, 0)
def MiniGameDefenseFixedStatExcelAddEquipment1Level(builder, Equipment1Level):
    """This method is deprecated. Please switch to AddEquipment1Level."""
    return AddEquipment1Level(builder, Equipment1Level)
def AddEquipment2Tier(builder, Equipment2Tier): builder.PrependInt32Slot(7, Equipment2Tier, 0)
def MiniGameDefenseFixedStatExcelAddEquipment2Tier(builder, Equipment2Tier):
    """This method is deprecated. Please switch to AddEquipment2Tier."""
    return AddEquipment2Tier(builder, Equipment2Tier)
def AddEquipment2Level(builder, Equipment2Level): builder.PrependInt32Slot(8, Equipment2Level, 0)
def MiniGameDefenseFixedStatExcelAddEquipment2Level(builder, Equipment2Level):
    """This method is deprecated. Please switch to AddEquipment2Level."""
    return AddEquipment2Level(builder, Equipment2Level)
def AddEquipment3Tier(builder, Equipment3Tier): builder.PrependInt32Slot(9, Equipment3Tier, 0)
def MiniGameDefenseFixedStatExcelAddEquipment3Tier(builder, Equipment3Tier):
    """This method is deprecated. Please switch to AddEquipment3Tier."""
    return AddEquipment3Tier(builder, Equipment3Tier)
def AddEquipment3Level(builder, Equipment3Level): builder.PrependInt32Slot(10, Equipment3Level, 0)
def MiniGameDefenseFixedStatExcelAddEquipment3Level(builder, Equipment3Level):
    """This method is deprecated. Please switch to AddEquipment3Level."""
    return AddEquipment3Level(builder, Equipment3Level)
def AddCharacterWeaponGrade(builder, CharacterWeaponGrade): builder.PrependInt32Slot(11, CharacterWeaponGrade, 0)
def MiniGameDefenseFixedStatExcelAddCharacterWeaponGrade(builder, CharacterWeaponGrade):
    """This method is deprecated. Please switch to AddCharacterWeaponGrade."""
    return AddCharacterWeaponGrade(builder, CharacterWeaponGrade)
def AddCharacterWeaponLevel(builder, CharacterWeaponLevel): builder.PrependInt32Slot(12, CharacterWeaponLevel, 0)
def MiniGameDefenseFixedStatExcelAddCharacterWeaponLevel(builder, CharacterWeaponLevel):
    """This method is deprecated. Please switch to AddCharacterWeaponLevel."""
    return AddCharacterWeaponLevel(builder, CharacterWeaponLevel)
def AddCharacterGearTier(builder, CharacterGearTier): builder.PrependInt32Slot(13, CharacterGearTier, 0)
def MiniGameDefenseFixedStatExcelAddCharacterGearTier(builder, CharacterGearTier):
    """This method is deprecated. Please switch to AddCharacterGearTier."""
    return AddCharacterGearTier(builder, CharacterGearTier)
def AddCharacterGearLevel(builder, CharacterGearLevel): builder.PrependInt32Slot(14, CharacterGearLevel, 0)
def MiniGameDefenseFixedStatExcelAddCharacterGearLevel(builder, CharacterGearLevel):
    """This method is deprecated. Please switch to AddCharacterGearLevel."""
    return AddCharacterGearLevel(builder, CharacterGearLevel)
def End(builder): return builder.EndObject()
def MiniGameDefenseFixedStatExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)