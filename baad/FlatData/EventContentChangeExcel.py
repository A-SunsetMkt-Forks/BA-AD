# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentChangeExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentChangeExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentChangeExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentChangeExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentChangeExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def ChangeCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def IsLast(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # EventContentChangeExcel
    def RewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def RewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def RewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def ChangeCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def ChangeCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeExcel
    def ChangeCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(9)
def EventContentChangeExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddEventContentId(builder, EventContentId): builder.PrependInt64Slot(0, EventContentId, 0)
def EventContentChangeExcelAddEventContentId(builder, EventContentId):
    """This method is deprecated. Please switch to AddEventContentId."""
    return AddEventContentId(builder, EventContentId)
def AddChangeCount(builder, ChangeCount): builder.PrependInt64Slot(1, ChangeCount, 0)
def EventContentChangeExcelAddChangeCount(builder, ChangeCount):
    """This method is deprecated. Please switch to AddChangeCount."""
    return AddChangeCount(builder, ChangeCount)
def AddIsLast(builder, IsLast): builder.PrependBoolSlot(2, IsLast, 0)
def EventContentChangeExcelAddIsLast(builder, IsLast):
    """This method is deprecated. Please switch to AddIsLast."""
    return AddIsLast(builder, IsLast)
def AddRewardParcelType(builder, RewardParcelType): builder.PrependInt32Slot(3, RewardParcelType, 0)
def EventContentChangeExcelAddRewardParcelType(builder, RewardParcelType):
    """This method is deprecated. Please switch to AddRewardParcelType."""
    return AddRewardParcelType(builder, RewardParcelType)
def AddRewardId(builder, RewardId): builder.PrependInt64Slot(4, RewardId, 0)
def EventContentChangeExcelAddRewardId(builder, RewardId):
    """This method is deprecated. Please switch to AddRewardId."""
    return AddRewardId(builder, RewardId)
def AddRewardAmount(builder, RewardAmount): builder.PrependInt32Slot(5, RewardAmount, 0)
def EventContentChangeExcelAddRewardAmount(builder, RewardAmount):
    """This method is deprecated. Please switch to AddRewardAmount."""
    return AddRewardAmount(builder, RewardAmount)
def AddChangeCostType(builder, ChangeCostType): builder.PrependInt32Slot(6, ChangeCostType, 0)
def EventContentChangeExcelAddChangeCostType(builder, ChangeCostType):
    """This method is deprecated. Please switch to AddChangeCostType."""
    return AddChangeCostType(builder, ChangeCostType)
def AddChangeCostId(builder, ChangeCostId): builder.PrependInt64Slot(7, ChangeCostId, 0)
def EventContentChangeExcelAddChangeCostId(builder, ChangeCostId):
    """This method is deprecated. Please switch to AddChangeCostId."""
    return AddChangeCostId(builder, ChangeCostId)
def AddChangeCostAmount(builder, ChangeCostAmount): builder.PrependInt32Slot(8, ChangeCostAmount, 0)
def EventContentChangeExcelAddChangeCostAmount(builder, ChangeCostAmount):
    """This method is deprecated. Please switch to AddChangeCostAmount."""
    return AddChangeCostAmount(builder, ChangeCostAmount)
def End(builder): return builder.EndObject()
def EventContentChangeExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)